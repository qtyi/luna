// Licensed to the Qtyi under one or more agreements.
// The Qtyi licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System.Collections.Immutable;

namespace Luna.Tools;

internal sealed class LuaTestFilesSourceWriter : IndentWriter
{
    private readonly ImmutableArray<string> _fileNames;

    public LuaTestFilesSourceWriter(TextWriter writer, TestFilesSourceProductionContext context) : base(writer)
    {
        _fileNames = context.FileNames;
    }

    public static void WriteSource(TextWriter writer, TestFilesSourceProductionContext context) => new LuaTestFilesSourceWriter(writer, context).WriteSource();

    private void WriteSource()
    {
        WriteLine("// <auto-generated />");
        WriteLine();
        WriteLine("#nullable enable");
        WriteLine();
        WriteLine("using System.Collections.Generic;");
        WriteLine("using System.IO;");
        WriteLine();
        WriteLine("namespace TestResources;");
        WriteLine();
        WriteLine("public static class LuaTestFiles");
        this.OpenBlock();

        WriteMethods();

        this.CloseBlock();
    }

    private void WriteMethods()
    {
        WriteLine("public static IEnumerable<string> GetAllFileNames()");
        this.OpenBlock();

        foreach (var fileName in _fileNames)
        {
            WriteLine($"yield return \"{fileName}\";");
        }

        this.CloseBlock();

        WriteLine();

        WriteLine("public static string GetSource(string name) => ResourceLoader.GetResource($\"LuaTestFiles.{name}\");");
    }
}
