<!-- Licensed to the Qtyi under one or more agreements. The Qtyi licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>$(CoreLibraryTargetFrameworks)</TargetFrameworks>
    <OutputType>Library</OutputType>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GenerateMicrosoftCodeAnalysisCommitHashAttribute>true</GenerateMicrosoftCodeAnalysisCommitHashAttribute>
    <ApplyNgenOptimization Condition="'$(TargetFramework)' == 'netstandard2.0'">full</ApplyNgenOptimization>

    <!-- NuGet -->
    <IsPackable>true</IsPackable>
    <PackageDescription>
      .NET Compiler Platform ("Luna") support for Lua, Qtyi.CodeAnalysis.Lua.dll.
    </PackageDescription>
    <PackageTags>Luna Lua CodeAnalysis Compiler Parser Scanner Lexer Emit CodeGeneration Metadata IL Compilation Scripting Syntax Semantics</PackageTags>

    <!-- Enable output of generated files back into our Generated directory -->
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <CompilerGeneratedFilesOutputPath>Generated</CompilerGeneratedFilesOutputPath>
  </PropertyGroup>
  
  <ItemGroup Label="AdditionalFiles">
    <AdditionalFiles Include="CompilationOptions.xml" />
    
    <None Include="..\..\..\Tools\Source\CompilerGeneratorTools\src\Shared\Syntax.xsd" Link="Syntax\Syntax.xsd" />
    <AdditionalFiles Include="Syntax\Syntax.xml" />

    <AdditionalFiles Include="Symbols\Symbols.xml" />

    <!-- Don't include the output from a previous source generator execution into future runs; the */** trick here ensures that there's
         at least one subdirectory, which is our key that it's coming from a source generator as opposed to something that is coming from
         some other tool. -->
    <Compile Remove="$(CompilerGeneratedFilesOutputPath)/*/**/*.cs" />
  </ItemGroup>
  
  <ItemGroup Label="Resources">
    <EmbeddedResource Update="LuaResources.resx" GenerateSource="true" />
  </ItemGroup>

  <ItemGroup Label="InternalsVisibles">
    <!-- InternalsVisibleTo -->
    <InternalsVisibleTo Include="Qtyi.CodeAnalysis.Test.Utilities" />
    <InternalsVisibleTo Include="Qtyi.CodeAnalysis.Lua.Test.Utilities" />
    <InternalsVisibleTo Include="Qtyi.CodeAnalysis.Lua.Syntax.UnitTests" />
    <InternalsVisibleTo Include="luac" />

    <!-- InternalsVisibleFrom -->
    <InternalsVisibleFrom Include="Microsoft.CodeAnalysis" />
  </ItemGroup>

  <ItemGroup Label="References">
    <!-- PackageReference -->
    <PackageReference Include="Microsoft.CodeAnalysis.Common" Version="$(MicrosoftCodeAnalysisVersion)" />

    <!-- ProjectReference -->
    <ProjectReference Include="..\..\Core\Portable\Qtyi.CodeAnalysis.csproj" />
    <ProjectReference Include="..\..\..\Tools\Source\CompilerGeneratorTools\src\LuaCodeAnalysisSourceGenerators\LuaCodeAnalysisSourceGenerators.csproj">
      <OutputItemType>Analyzer</OutputItemType>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>

  <Import Project="..\..\Shared\CodeAnalysis\Qtyi.CodeAnalysis.Shared.projitems" Label="Shared" />

</Project>
