<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ja" original="../LuaResources.resx">
    <body>
      <trans-unit id="CompilationLua">
        <source>Compilation (Lua):</source>
        <target state="new">Compilation (Lua):</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AssemblyMatchBadVersion">
        <source>Assembly '{0}' with identity '{1}' uses '{2}' which has a higher version than referenced assembly '{3}' with identity '{4}'.</source>
        <target state="new">Assembly '{0}' with identity '{1}' uses '{2}' which has a higher version than referenced assembly '{3}' with identity '{4}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AssgLvalueExpected">
        <source>The left-hand side of an assignment must be a variable or member.</source>
        <target state="new">The left-hand side of an assignment must be a variable or member.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_AttributeExpected">
        <source>Attribute expected.</source>
        <target state="new">Attribute expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadDocumentationMode">
        <source>Provided documentation mode is unsupported or invalid: '{0}'.</source>
        <target state="new">Provided documentation mode is unsupported or invalid: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadLanguageVersion">
        <source>Provided language version is unsupported or invalid: '{0}'.</source>
        <target state="new">Provided language version is unsupported or invalid: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_BadSourceCodeKind">
        <source>Provided source code kind is unsupported or invalid: '{0}'.</source>
        <target state="new">Provided source code kind is unsupported or invalid: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CantReadConfigFile">
        <source>Cannot read config file '{0}' -- '{1}'.</source>
        <target state="new">Cannot read config file '{0}' -- '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CommaExpected">
        <source>',' expected.</source>
        <target state="new">',' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_CycleInTypeForwarder">
        <source>The type forwarder for type '{0}' in assembly '{1}' causes a cycle.</source>
        <target state="new">The type forwarder for type '{0}' in assembly '{1}' causes a cycle.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_DuplicateTypeForwarder">
        <source>'{0}' duplicate TypeForwardedToAttribute.</source>
        <target state="new">'{0}' duplicate TypeForwardedToAttribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ElseIfCannotStartStatement">
        <source>'elseif' cannot start a statement.</source>
        <target state="new">'elseif' cannot start a statement.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_ExpressionExpected">
        <source>Expression expected.</source>
        <target state="new">Expression expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_FieldSeparatorExpected">
        <source>',' or ';' expected.</source>
        <target state="new">',' or ';' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IdentifierExpected">
        <source>Identifier expected.</source>
        <target state="new">Identifier expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IdentifierExpectedKW">
        <source>Identifier expected; '{0}' is a keyword.</source>
        <target state="new">Identifier expected; '{0}' is a keyword.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalEscape">
        <source>Unrecognized escape sequence.</source>
        <target state="new">Unrecognized escape sequence.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalStatement">
        <source>Only assignment and invocation expressions can be used as a statement</source>
        <target state="new">Only assignment and invocation expressions can be used as a statement</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_IllegalUtf8ByteSequence">
        <source>Illegal UTF-8 byte escape sequence.</source>
        <target state="new">Illegal UTF-8 byte escape sequence.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InsufficientStack">
        <source>An expression is too long or complex to compile.</source>
        <target state="new">An expression is too long or complex to compile.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InternalError">
        <source>Internal error in the Lua compiler.</source>
        <target state="new">Internal error in the Lua compiler.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidAttrTerm">
        <source>Invalid attribute term '{0}'.</source>
        <target state="new">Invalid attribute term '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidExprTerm">
        <source>Invalid expression term '{0}'.</source>
        <target state="new">Invalid expression term '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidFieldValueTerm">
        <source>Invalid filed value expression term.</source>
        <target state="new">Invalid filed value expression term.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidInstrumentationKind">
        <source>Invalid instrumentation kind: '{0}'.</source>
        <target state="new">Invalid instrumentation kind: '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvalidNumber">
        <source>Invalid number.</source>
        <target state="new">Invalid number.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_InvocationArgumentsExpected">
        <source>Invocation arguments expected.</source>
        <target state="new">Invocation arguments expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_MisplacedReturnStat">
        <source>Return statement can only be the last statement of a block.</source>
        <target state="new">Return statement can only be the last statement of a block.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NewlineInConst">
        <source>Newline in string literal constant.</source>
        <target state="new">Newline in string literal constant.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_NumberOverflow">
        <source>Number constant is too large.</source>
        <target state="new">Number constant is too large.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_OpenEndedComment">
        <source>End-of-file found, close long brackect expected.</source>
        <target state="new">End-of-file found, close long brackect expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SemicolonExpected">
        <source>';' expected.</source>
        <target state="new">';' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_SyntaxError">
        <source>Syntax error, '{0}' expected.</source>
        <target state="new">Syntax error, '{0}' expected.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TooManyIdentifiers">
        <source>Too many control variables.</source>
        <target state="new">Too many control variables.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_TypeForwardedToMultipleAssemblies">
        <source>Module '{0}' in assembly '{1}' is forwarding the type '{2}' to multiple assemblies: '{3}' and '{4}'.</source>
        <target state="new">Module '{0}' in assembly '{1}' is forwarding the type '{2}' to multiple assemblies: '{3}' and '{4}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnexpectedCharacter">
        <source>Unexpected character '{0}'.</source>
        <target state="new">Unexpected character '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ERR_UnterminatedStringLiteral">
        <source>Unterminated string literal.</source>
        <target state="new">Unterminated string literal.</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_LUACHelp">
        <source>No help message found.</source>
        <target state="new">No help message found.</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_LangVersions">
        <source>Supported language versions:</source>
        <target state="new">Supported language versions:</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_LogoLine1">
        <source>{0} version {1}</source>
        <target state="new">{0} version {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_LogoLine2">
        <source>Copyright (C) Qtyi. All rights reserved.</source>
        <target state="new">Copyright (C) Qtyi. All rights reserved.</target>
        <note />
      </trans-unit>
      <trans-unit id="IDS_ToolName">
        <source>Lua Compiler</source>
        <target state="new">Lua Compiler</target>
        <note />
      </trans-unit>
      <trans-unit id="SubmissionCanHaveAtMostOne">
        <source>Submission can have at most one syntax tree.</source>
        <target state="new">Submission can have at most one syntax tree.</target>
        <note />
      </trans-unit>
      <trans-unit id="SubmissionCanOnlyInclude">
        <source>Submission can only include script code.</source>
        <target state="new">Submission can only include script code.</target>
        <note />
      </trans-unit>
      <trans-unit id="SyntaxTreeAlreadyPresent">
        <source>Syntax tree already present.</source>
        <target state="new">Syntax tree already present.</target>
        <note />
      </trans-unit>
      <trans-unit id="SyntaxTreeFromLoadNoRemoveReplace">
        <source>SyntaxTree cannot be removed or replaced directly.</source>
        <target state="new">SyntaxTree cannot be removed or replaced directly.</target>
        <note />
      </trans-unit>
      <trans-unit id="SyntaxTreeNotFoundToRemove">
        <source>SyntaxTree is not part of the compilation, so it cannot be removed.</source>
        <target state="new">SyntaxTree is not part of the compilation, so it cannot be removed.</target>
        <note />
      </trans-unit>
      <trans-unit id="SyntaxTreeNotFoundWithFilePath">
        <source>Syntax tree not found with file path: {0}.</source>
        <target state="new">Syntax tree not found with file path: {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ThisMethodCanOnlyBeUsedToCreateTokens">
        <source>This method can only be used to create tokens - {0} is not a token kind.</source>
        <target state="new">This method can only be used to create tokens - {0} is not a token kind.</target>
        <note />
      </trans-unit>
      <trans-unit id="TreeMustHaveARootNodeWith">
        <source>Tree must have a root node with SyntaxKind.Chunk.</source>
        <target state="new">Tree must have a root node with SyntaxKind.Chunk.</target>
        <note />
      </trans-unit>
      <trans-unit id="UseIdentifierForTokens">
        <source>Use Qtyi.CodeAnalysis.Lua.SyntaxFactory.Identifier to create tokens.</source>
        <target state="new">Use Qtyi.CodeAnalysis.Lua.SyntaxFactory.Identifier to create tokens.</target>
        <note />
      </trans-unit>
      <trans-unit id="UseLiteralForNumeric">
        <source>Use Qtyi.CodeAnalysis.Lua.SyntaxFactory.Literal to create numeric literal tokens.</source>
        <target state="new">Use Qtyi.CodeAnalysis.Lua.SyntaxFactory.Literal to create numeric literal tokens.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_ErrorOverride">
        <source>{0}. See also error LUA{1}.</source>
        <target state="new">{0}. See also error LUA{1}.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_FileAlreadyIncluded">
        <source>Source file '{0}' specified multiple times.</source>
        <target state="new">Source file '{0}' specified multiple times.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnifyReferenceBldRev_Description">
        <source>The two assemblies differ in release and/or version number. For unification to occur, you must specify directives in the application's .config file, and you must provide the correct strong name of an assembly.</source>
        <target state="new">The two assemblies differ in release and/or version number. For unification to occur, you must specify directives in the application's .config file, and you must provide the correct strong name of an assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnifyReferenceBldRev_Title">
        <source>Assuming assembly reference matches identity</source>
        <target state="new">Assuming assembly reference matches identity</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnifyReferenceMajMin">
        <source>Assuming assembly reference '{0}' used by '{1}' matches identity '{2}' of '{3}', you may need to supply runtime policy.</source>
        <target state="new">Assuming assembly reference '{0}' used by '{1}' matches identity '{2}' of '{3}', you may need to supply runtime policy.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnifyReferenceMajMin_Description">
        <source>The two assemblies differ in release and/or version number. For unification to occur, you must specify directives in the application's .config file, and you must provide the correct strong name of an assembly.</source>
        <target state="new">The two assemblies differ in release and/or version number. For unification to occur, you must specify directives in the application's .config file, and you must provide the correct strong name of an assembly.</target>
        <note />
      </trans-unit>
      <trans-unit id="WRN_UnifyReferenceMajMin_Title">
        <source>Assuming assembly reference matches identity</source>
        <target state="new">Assuming assembly reference matches identity</target>
        <note />
      </trans-unit>
      <trans-unit id="WrongSemanticModelType">
        <source>Expected a {0} SemanticModel.</source>
        <target state="new">Expected a {0} SemanticModel.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>