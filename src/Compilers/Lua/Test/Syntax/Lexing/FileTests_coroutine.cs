// Licensed to the Qtyi under one or more agreements.
// The Qtyi licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System.Collections.Immutable;
using Microsoft.CodeAnalysis;
using Qtyi.CodeAnalysis.Lua.Test.Utilities;

namespace Qtyi.CodeAnalysis.Lua.UnitTests.Lexing;

partial class FileTests
{
    private void TestOfficialTestFile_coroutine(string source, SourceCodeKind kind)
    {
        var V = LexSource(source, options: TestOptions.RegularDefault.WithKind(kind));

        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"testing coroutines\"", value: ImmutableArray.Create("testing coroutines"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "require");
        V(SyntaxKind.StringLiteralToken, text: "'debug'", value: ImmutableArray.Create("debug"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "ismain");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"thread\"", value: ImmutableArray.Create("thread"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "ismain");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "eqtab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"running\"", value: ImmutableArray.Create("running"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"thread\"", value: ImmutableArray.Create("thread"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"suspended\"", value: ImmutableArray.Create("suspended"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "tostring");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"thread\"", value: ImmutableArray.Create("thread"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'b'", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'c'", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"suspended\"", value: ImmutableArray.Create("suspended"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "eqtab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "eqtab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'b'", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'c'", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xuxu\"", value: ImmutableArray.Create("xuxu"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "eqtab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xuxu\"", value: ImmutableArray.Create("xuxu"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xuxu\"", value: ImmutableArray.Create("xuxu"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'xuxu'", value: ImmutableArray.Create("xuxu"U8.ToArray()));
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'xuxu'", value: ImmutableArray.Create("xuxu"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "pf");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "pf");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pf");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "gen");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "filter");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "fmod");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "gen");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "80", value: 80L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "filter");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "22", value: 22L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "79", value: 79L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"to-be-closed variables in coroutines\"", value: ImmutableArray.Create("to-be-closed variables in coroutines"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"testing 'coroutine.close'\"", value: ImmutableArray.Create("testing 'coroutine.close'"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"running\"", value: ImmutableArray.Create("running"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"normal\"", value: ImmutableArray.Create("normal"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"running coroutine\"", value: ImmutableArray.Create("running coroutine"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "111", value: 111L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "111", value: 111L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "43", value: 43L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "st2");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st1");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st2");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "43", value: 43L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "43", value: 43L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "what");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"C\"", value: ImmutableArray.Create("C"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "hv");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "res1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "res1");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sort");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "xpcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "r1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "r2");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "r1");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "r2");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "xpcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "240", value: 240L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gsub");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\".\"", value: ImmutableArray.Create("."U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"aa\"", value: ImmutableArray.Create("aa"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "dotrace");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "dotrace");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"clr\"", value: ImmutableArray.Create("clr"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "correcttrace");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"call\"", value: ImmutableArray.Create("call"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"line\"", value: ImmutableArray.Create("line"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"call\"", value: ImmutableArray.Create("call"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return\"", value: ImmutableArray.Create("return"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"line\"", value: ImmutableArray.Create("line"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return\"", value: ImmutableArray.Create("return"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "correcttrace");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "correcttrace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "currentline");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "linedefined");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "currentline");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "goo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "linedefined");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "goo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "goo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "goo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "goo");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "all");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.IdentifierToken, text: "all");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "all");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__mode");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"kv\"", value: ImmutableArray.Create("kv"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "21", value: 21L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "32", value: 32L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "43", value: 43L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "53", value: 53L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "co_func");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "current_co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "current_co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "current_co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "current_co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co_func");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"non%-suspended\"", value: ImmutableArray.Create("non%-suspended"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "111", value: 111L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "errobj");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "errobj");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "111", value: 111L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "errobj");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "errobj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"dead coroutine\"", value: ImmutableArray.Create("dead coroutine"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "co2");
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "co2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "co2");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'normal'", value: ImmutableArray.Create("normal"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'dead'", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "F");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'x'", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "F");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "F");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "F");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: skipping coroutine API tests <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping coroutine API tests <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"testing yields inside hooks\"", value: ImmutableArray.Create("testing yields inside hooks"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "turn");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "fact");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "turn");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "fact");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 0\"", value: ImmutableArray.Create("yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"\"", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "fact");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"A\"", value: ImmutableArray.Create("A"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 0\"", value: ImmutableArray.Create("yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"\"", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "fact");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"B\"", value: ImmutableArray.Create("B"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "turn");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"A\"", value: ImmutableArray.Create("A"U8.ToArray()));
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "turn");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"B\"", value: ImmutableArray.Create("B"U8.ToArray()));
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "traceback");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "traceback");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pushint 10; yield 0\"", value: ImmutableArray.Create("pushint 10; yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"\"", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "line");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"l\"", value: ImmutableArray.Create("l"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "currentline");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"setglobal X; yield 0\"", value: ImmutableArray.Create("setglobal X; yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"l\"", value: ImmutableArray.Create("l"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "line");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "line");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "line");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "line");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 0\"", value: ImmutableArray.Create("yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"\"", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 0\"", value: ImmutableArray.Create("yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"\"", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 0\"", value: ImmutableArray.Create("yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"l\"", value: ImmutableArray.Create("l"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getlocal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "setlocal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "currentline");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "linedefined");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 1\"", value: ImmutableArray.Create("yield 1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "linedefined");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getlocal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"testing coroutine API\"", value: ImmutableArray.Create("testing coroutine API"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    newthread      # create thread\n    pushvalue 2    # push body\n    pushstring 'a a a'  # push argument\n    xmove 0 3 2   # move values to new thread\n    resume -1, 1    # call it first time\n    pushstatus\n    xmove 3 0 0   # move results back to stack\n    setglobal X    # result\n    setglobal Y    # status\n    pushvalue 2     # push body (to call it again)\n    pushstring 'b b b'\n    xmove 0 3 2\n    resume -1, 1    # call it again\n    pushstatus\n    xmove 3 0 0\n    return 1        # return result\n  ]]", value: ImmutableArray.Create("    newthread      # create thread\n    pushvalue 2    # push body\n    pushstring 'a a a'  # push argument\n    xmove 0 3 2   # move values to new thread\n    resume -1, 1    # call it first time\n    pushstatus\n    xmove 3 0 0   # move results back to stack\n    setglobal X    # result\n    setglobal Y    # status\n    pushvalue 2     # push body (to call it again)\n    pushstring 'b b b'\n    xmove 0 3 2\n    resume -1, 1    # call it again\n    pushstatus\n    xmove 3 0 0\n    return 1        # return result\n  "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'b b b'", value: ImmutableArray.Create("b b b"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'a a a'", value: ImmutableArray.Create("a a a"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n                 pushnum 10;\n                 pushnum 20;\n                 resume -3 2;\n                 pushstatus\n                 gettop;\n                 return 3]]", value: ImmutableArray.Create("                 pushnum 10;\n                 pushnum 20;\n                 resume -3 2;\n                 pushstatus\n                 gettop;\n                 return 3"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"non%-suspended\"", value: ImmutableArray.Create("non%-suspended"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ERRRUN\"", value: ImmutableArray.Create("ERRRUN"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    rawgeti R 1    # get main thread\n    pushnum 10;\n    pushnum 20;\n    resume -3 2;\n    pushstatus\n    gettop;\n    return 4]]", value: ImmutableArray.Create("    rawgeti R 1    # get main thread\n    pushnum 10;\n    pushnum 20;\n    resume -3 2;\n    pushstatus\n    gettop;\n    return 4"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"non%-suspended\"", value: ImmutableArray.Create("non%-suspended"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ERRRUN\"", value: ImmutableArray.Create("ERRRUN"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "newstate");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"newthread; isyieldable -1; remove 1; return 1\"", value: ImmutableArray.Create("newthread; isyieldable -1; remove 1; return 1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"rawgeti R 1; isyieldable -1; remove 1; return 1\"", value: ImmutableArray.Create("rawgeti R 1; isyieldable -1; remove 1; return 1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"settop 0\"", value: ImmutableArray.Create("settop 0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "loadlib");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "doremote");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    coroutine = require'coroutine';\n    X = function (x) coroutine.yield(x, 'BB'); return 'CC' end;\n    return 'ok']]", value: ImmutableArray.Create("    coroutine = require'coroutine';\n    X = function (x) coroutine.yield(x, 'BB'); return 'CC' end;\n    return 'ok'"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    rawgeti R 1     # get main thread\n    pushstring 'XX'\n    getglobal X    # get function for body\n    pushstring AA      # arg\n    resume 1 1      # 'resume' shadows previous stack!\n    gettop\n    setglobal T    # top\n    setglobal B    # second yielded value\n    setglobal A    # fist yielded value\n    rawgeti R 1     # get main thread\n    pushnum 5       # arg (noise)\n    resume 1 1      # after coroutine ends, previous stack is back\n    pushstatus\n    return *\n  ]]", value: ImmutableArray.Create("    rawgeti R 1     # get main thread\n    pushstring 'XX'\n    getglobal X    # get function for body\n    pushstring AA      # arg\n    resume 1 1      # 'resume' shadows previous stack!\n    gettop\n    setglobal T    # top\n    setglobal B    # second yielded value\n    setglobal A    # fist yielded value\n    rawgeti R 1     # get main thread\n    pushnum 5       # arg (noise)\n    resume 1 1      # after coroutine ends, previous stack is back\n    pushstatus\n    return *\n  "U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'XX'", value: ImmutableArray.Create("XX"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'CC'", value: ImmutableArray.Create("CC"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "doremote");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return T\"", value: ImmutableArray.Create("return T"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'2'", value: ImmutableArray.Create("2"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "doremote");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return A\"", value: ImmutableArray.Create("return A"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'AA'", value: ImmutableArray.Create("AA"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "doremote");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return B\"", value: ImmutableArray.Create("return B"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'BB'", value: ImmutableArray.Create("BB"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "closestate");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "TO_SURVIVE");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "TO_SURVIVE");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "_soft");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000000", value: 1000000L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"+\"", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"testing yields inside metamethods\"", value: ImmutableArray.Create("testing yields inside metamethods"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table\"", value: ImmutableArray.Create("table"U8.ToArray()));
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__eq");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"eq\"", value: ImmutableArray.Create("eq"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__lt");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"lt\"", value: ImmutableArray.Create("lt"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__le");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"le\"", value: ImmutableArray.Create("le"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__add");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"add\"", value: ImmutableArray.Create("add"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__sub");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__mul");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mul\"", value: ImmutableArray.Create("mul"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__div");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"div\"", value: ImmutableArray.Create("div"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__idiv");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idiv\"", value: ImmutableArray.Create("idiv"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__pow");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pow\"", value: ImmutableArray.Create("pow"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__mod");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mod\"", value: ImmutableArray.Create("mod"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__unm");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"unm\"", value: ImmutableArray.Create("unm"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__bnot");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bnot\"", value: ImmutableArray.Create("bnot"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__shl");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shl\"", value: ImmutableArray.Create("shl"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__shr");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shr\"", value: ImmutableArray.Create("shr"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__band");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"band\"", value: ImmutableArray.Create("band"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__bor");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bor\"", value: ImmutableArray.Create("bor"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__bxor");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bxor\"", value: ImmutableArray.Create("bxor"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__concat");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__index");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idx\"", value: ImmutableArray.Create("idx"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"nidx\"", value: ImmutableArray.Create("nidx"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.StringLiteralToken, text: "\"hello\"", value: ImmutableArray.Create("hello"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.StringLiteralToken, text: "'>='", value: ImmutableArray.Create(">="U8.ToArray()));
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.StringLiteralToken, text: "'<'", value: ImmutableArray.Create("<"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"le\"", value: ImmutableArray.Create("le"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"<\"", value: ImmutableArray.Create("<"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.StringLiteralToken, text: "'<='", value: ImmutableArray.Create("<="U8.ToArray()));
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.StringLiteralToken, text: "'>'", value: ImmutableArray.Create(">"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"le\"", value: ImmutableArray.Create("le"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"<=\"", value: ImmutableArray.Create("<="U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.StringLiteralToken, text: "'=='", value: ImmutableArray.Create("=="U8.ToArray()));
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.StringLiteralToken, text: "'~='", value: ImmutableArray.Create("~="U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"eq\"", value: ImmutableArray.Create("eq"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"~=\"", value: ImmutableArray.Create("~="U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"add\"", value: ImmutableArray.Create("add"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"band\"", value: ImmutableArray.Create("band"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"add\"", value: ImmutableArray.Create("add"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "25", value: 25L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "15", value: 15L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mul\"", value: ImmutableArray.Create("mul"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pow\"", value: ImmutableArray.Create("pow"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"div\"", value: ImmutableArray.Create("div"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mod\"", value: ImmutableArray.Create("mod"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idiv\"", value: ImmutableArray.Create("idiv"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"add\"", value: ImmutableArray.Create("add"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "22", value: 22L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mul\"", value: ImmutableArray.Create("mul"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "120", value: 120L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pow\"", value: ImmutableArray.Create("pow"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"div\"", value: ImmutableArray.Create("div"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mod\"", value: ImmutableArray.Create("mod"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idiv\"", value: ImmutableArray.Create("idiv"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"add\"", value: ImmutableArray.Create("add"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2000", value: 2000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "25000", value: 25000L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "24000", value: 24000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2000", value: 2000L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mul\"", value: ImmutableArray.Create("mul"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20000", value: 20000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"div\"", value: ImmutableArray.Create("div"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.NumericLiteralToken, text: "600", value: 600L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mod\"", value: ImmutableArray.Create("mod"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "400", value: 400L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "500", value: 500L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idiv\"", value: ImmutableArray.Create("idiv"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mod\"", value: ImmutableArray.Create("mod"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bnot\"", value: ImmutableArray.Create("bnot"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"band\"", value: ImmutableArray.Create("band"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.BarToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bor\"", value: ImmutableArray.Create("bor"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bxor\"", value: ImmutableArray.Create("bxor"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shl\"", value: ImmutableArray.Create("shl"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shr\"", value: ImmutableArray.Create("shr"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"band\"", value: ImmutableArray.Create("band"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.BarToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bor\"", value: ImmutableArray.Create("bor"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bxor\"", value: ImmutableArray.Create("bxor"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shr\"", value: ImmutableArray.Create("shr"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shr\"", value: ImmutableArray.Create("shr"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shl\"", value: ImmutableArray.Create("shl"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shl\"", value: ImmutableArray.Create("shl"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bxor\"", value: ImmutableArray.Create("bxor"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"1012\"", value: ImmutableArray.Create("1012"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"1012hello10\"", value: ImmutableArray.Create("1012hello10"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.StringLiteralToken, text: "\"b\"", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.StringLiteralToken, text: "\"c\"", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ab10chello12x\"", value: ImmutableArray.Create("ab10chello12x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "mt1");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__le");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__lt");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "mt2");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__lt");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "mt1");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__lt");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__le");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "mt1");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__le");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mt1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mt2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "BB");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "BB");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"nidx\"", value: ImmutableArray.Create("nidx"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idx\"", value: ImmutableArray.Create("idx"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "AAA");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "BBB");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "AAA");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "BBB");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "setupvalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idx\"", value: ImmutableArray.Create("idx"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"nidx\"", value: ImmutableArray.Create("nidx"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idx\"", value: ImmutableArray.Create("idx"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "AAA");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"+\"", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"testing yields inside 'for' iterators\"", value: ImmutableArray.Create("testing yields inside 'for' iterators"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"for\"", value: ImmutableArray.Create("for"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"for\"", value: ImmutableArray.Create("for"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"for\"", value: ImmutableArray.Create("for"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"for\"", value: ImmutableArray.Create("for"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: skipping coroutine API tests <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping coroutine API tests <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"OK\"", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'testing coroutine API'", value: ImmutableArray.Create("testing coroutine API"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "apico");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "apico");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n  pushstring errorcode\n  pcallk 1 0 2;\n  invalid command (should not arrive here)\n]]", value: ImmutableArray.Create("  pushstring errorcode\n  pcallk 1 0 2;\n  invalid command (should not arrive here)\n"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[return *]]", value: ImmutableArray.Create("return *"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"stackmark\"", value: ImmutableArray.Create("stackmark"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"stackmark\"", value: ImmutableArray.Create("stackmark"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"errorcode\"", value: ImmutableArray.Create("errorcode"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ERRRUN\"", value: ImmutableArray.Create("ERRRUN"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "ctx");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "apico");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pushvalue 2; pushnum 10; pcallk 1 2 3; invalid command;\"", value: ImmutableArray.Create("pushvalue 2; pushnum 10; pcallk 1 2 3; invalid command;"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"getglobal status; getglobal ctx; pushvalue 2; pushstring a; pcallk 1 0 4; invalid command\"", value: ImmutableArray.Create("getglobal status; getglobal ctx; pushvalue 2; pushstring a; pcallk 1 0 4; invalid command"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"getglobal status; getglobal ctx; return *\"", value: ImmutableArray.Create("getglobal status; getglobal ctx; return *"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"YIELD\"", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"YIELD\"", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pushnum 3; pushnum 5; yield 1;\"", value: ImmutableArray.Create("pushnum 3; pushnum 5; yield 1;"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n        pushnum 102\n\tyieldk\t1 U2\n\tcannot be here!\n]]", value: ImmutableArray.Create("        pushnum 102\n\tyieldk\t1 U2\n\tcannot be here!\n"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[      # continuation\n\tpushvalue U3   # accessing upvalues inside a continuation\n        pushvalue U4\n\treturn *\n]]", value: ImmutableArray.Create("      # continuation\n\tpushvalue U3   # accessing upvalues inside a continuation\n        pushvalue U4\n\treturn *\n"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"huu\"", value: ImmutableArray.Create("huu"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "102", value: 102L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "eqtab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"huu\"", value: ImmutableArray.Create("huu"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[pushstring 'a'; pushnum 102; yield 2; ]]", value: ImmutableArray.Create("pushstring 'a'; pushnum 102; yield 2; "U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[newthread; pushvalue 2; xmove 0 3 1; resume 3 0;\n                       pushstatus; xmove 3 0 0;  resume 3 0; pushstatus;\n                       return 4; ]]", value: ImmutableArray.Create("newthread; pushvalue 2; xmove 0 3 1; resume 3 0;\n                       pushstatus; xmove 3 0 0;  resume 3 0; pushstatus;\n                       return 4; "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'YIELD'", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "102", value: 102L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n  remove 1;             # remove argument\n  pushvalue U3;         # get selection function\n  call 0 1;             # call it  (result is 'f' or 'yield')\n  pushstring hello      # single argument for selected function\n  pushupvalueindex 2;   # index of continuation program\n  callk 1 -1 .;\t\t# call selected function\n  errorerror\t\t# should never arrive here\n]]", value: ImmutableArray.Create("  remove 1;             # remove argument\n  pushvalue U3;         # get selection function\n  call 0 1;             # call it  (result is 'f' or 'yield')\n  pushstring hello      # single argument for selected function\n  pushupvalueindex 2;   # index of continuation program\n  callk 1 -1 .;\t\t# call selected function\n  errorerror\t\t# should never arrive here\n"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n  # continuation program\n  pushnum 34\t# return value\n  return *     # return all results\n]]", value: ImmutableArray.Create("  # continuation program\n  pushnum 34\t# return value\n  return *     # return all results\n"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"hello\"", value: ImmutableArray.Create("hello"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "34", value: 34L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[ # initial function\n          yieldk 1 2\n          cannot be here!\n       ]]", value: ImmutableArray.Create(" # initial function\n          yieldk 1 2\n          cannot be here!\n       "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[  # 1st continuation\n         yieldk 0 3 \n         cannot be here!\n       ]]", value: ImmutableArray.Create("  # 1st continuation\n         yieldk 0 3 \n         cannot be here!\n       "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[  # 2nd continuation\n         yieldk 0 4 \n         cannot be here!\n       ]]", value: ImmutableArray.Create("  # 2nd continuation\n         yieldk 0 4 \n         cannot be here!\n       "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[  # 3th continuation\n          pushvalue 6   # function which is last arg. to 'testC' here\n          pushnum 10; pushnum 20;\n          pcall 2 0 0   # call should throw an error and return to next line\n          pop 1\t\t# remove error message\n          pushvalue 6\n          getglobal status; getglobal ctx\n          pcallk 2 2 5  # call should throw an error and jump to continuation\n          cannot be here!\n       ]]", value: ImmutableArray.Create("  # 3th continuation\n          pushvalue 6   # function which is last arg. to 'testC' here\n          pushnum 10; pushnum 20;\n          pcall 2 0 0   # call should throw an error and return to next line\n          pop 1\t\t# remove error message\n          pushvalue 6\n          getglobal status; getglobal ctx\n          pcallk 2 2 5  # call should throw an error and jump to continuation\n          cannot be here!\n       "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[  # 4th (and last) continuation\n         return *\n       ]]", value: ImmutableArray.Create("  # 4th (and last) continuation\n         return *\n       "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"errmsg\"", value: ImmutableArray.Create("errmsg"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"YIELD\"", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "ctx");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"YIELD\"", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "ctx");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'string'", value: ImmutableArray.Create("string"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'string'", value: ImmutableArray.Create("string"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'string'", value: ImmutableArray.Create("string"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'string'", value: ImmutableArray.Create("string"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'string'", value: ImmutableArray.Create("string"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'function'", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.ColonToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"errmsg\"", value: ImmutableArray.Create("errmsg"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"YIELD\"", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "ctx");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"hi\"", value: ImmutableArray.Create("hi"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"hi\"", value: ImmutableArray.Create("hi"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.EndOfFileToken);
    }

    private void TestOfficialTestFileWithTrivia_coroutine(string source, SourceCodeKind kind)
    {
        var V = LexSource(source, options: TestOptions.RegularDefault.WithKind(kind), withTrivia: true);

        V(SyntaxKind.SingleLineCommentTrivia, text: "-- $Id: testes/coroutine.lua $", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- See Copyright Notice in file all.lua", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"testing coroutines\"", value: ImmutableArray.Create("testing coroutines"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "require");
        V(SyntaxKind.StringLiteralToken, text: "'debug'", value: ImmutableArray.Create("debug"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ismain");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"thread\"", value: ImmutableArray.Create("thread"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ismain");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- trivial errors", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- tests for multiple yield/resume arguments", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "eqtab");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- declare x", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- declare f", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- next call should not corrupt coroutine (but must fail,", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- as it attempts to resume the running coroutine)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"running\"", value: ImmutableArray.Create("running"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"thread\"", value: ImmutableArray.Create("thread"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"suspended\"", value: ImmutableArray.Create("suspended"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "tostring");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"thread\"", value: ImmutableArray.Create("thread"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'b'", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'c'", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"suspended\"", value: ImmutableArray.Create("suspended"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "eqtab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "eqtab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'b'", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'c'", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"xuxu\"", value: ImmutableArray.Create("xuxu"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "eqtab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xuxu\"", value: ImmutableArray.Create("xuxu"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"xuxu\"", value: ImmutableArray.Create("xuxu"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yields in tail calls", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'xuxu'", value: ImmutableArray.Create("xuxu"U8.ToArray()));
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'xuxu'", value: ImmutableArray.Create("xuxu"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- recursive", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pf");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "pf");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pf");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- sieve", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "gen");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "filter");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "fmod");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "gen");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "80", value: 80L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "filter");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "22", value: 22L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "79", value: 79L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"to-be-closed variables in coroutines\"", value: ImmutableArray.Create("to-be-closed variables in coroutines"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- ok to close a dead coroutine", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"testing 'coroutine.close'\"", value: ImmutableArray.Create("testing 'coroutine.close'"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- also ok to close it again", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- cannot close the running coroutine", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"running\"", value: ImmutableArray.Create("running"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- cannot close a \"normal\" coroutine", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"normal\"", value: ImmutableArray.Create("normal"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- cannot close a coroutine while closing it", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- try to close it again", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"running coroutine\"", value: ImmutableArray.Create("running coroutine"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- to-be-closed variables in coroutines", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- closing a coroutine after an error", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- after closing, no more errors", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error closing a coroutine", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "111", value: 111L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "111", value: 111L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- after closing, no more errors", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- <close> versus pcall in coroutines", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "43", value: 43L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st2");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st2");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "43", value: 43L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "43", value: 43L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "what");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"C\"", value: ImmutableArray.Create("C"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- recovering from errors in __close metamethods", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "hv");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- call 'foo' protected", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yield 1", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- continue", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- last error (20)", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yielding across C boundaries", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sort");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xpcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "r1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "r2");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "r1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "r2");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "xpcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "240", value: 240L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- unyieldable C call", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "isyieldable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gsub");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\".\"", value: ImmutableArray.Create("."U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"aa\"", value: ImmutableArray.Create("aa"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing single trace of coroutines", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "dotrace");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "dotrace");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"clr\"", value: ImmutableArray.Create("clr"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "correcttrace");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"call\"", value: ImmutableArray.Create("call"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"line\"", value: ImmutableArray.Create("line"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"call\"", value: ImmutableArray.Create("call"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"return\"", value: ImmutableArray.Create("return"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"line\"", value: ImmutableArray.Create("line"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"return\"", value: ImmutableArray.Create("return"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "correcttrace");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "correcttrace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- errors in coroutines", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "currentline");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "linedefined");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "currentline");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "goo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "linedefined");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "goo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "goo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "goo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"dead\"", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "goo");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- co-routines x for loop", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "all");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "all");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "all");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- access to locals of collected corroutines", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__mode");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"kv\"", value: ImmutableArray.Create("kv"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "21", value: 21L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "32", value: 32L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "43", value: 43L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "53", value: 53L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- old bug: attempt to resume itself", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co_func");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "current_co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "current_co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "current_co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "current_co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co_func");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- other old bug when attempting to resume itself", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- (trigger C-code assertions)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"non%-suspended\"", value: ImmutableArray.Create("non%-suspended"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- bug in 5.4.1", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- coroutine ran close metamethods with invalid status during a", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- reset.", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "111", value: 111L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "errobj");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "errobj");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "111", value: 111L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "errobj");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "errobj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"dead coroutine\"", value: ImmutableArray.Create("dead coroutine"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- attempt to resume 'normal' coroutine", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co2");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co2");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'normal'", value: ImmutableArray.Create("normal"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'dead'", value: ImmutableArray.Create("dead"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- infinite recursion of coroutines", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- access to locals of erroneous coroutines", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "F");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'x'", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- overwrite previous position of local `a'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "F");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "F");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "F");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: skipping coroutine API tests <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping coroutine API tests <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"testing yields inside hooks\"", value: ImmutableArray.Create("testing yields inside hooks"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "turn");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "fact");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "turn");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "fact");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 0\"", value: ImmutableArray.Create("yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"\"", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "fact");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"A\"", value: ImmutableArray.Create("A"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 0\"", value: ImmutableArray.Create("yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"\"", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "fact");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"B\"", value: ImmutableArray.Create("B"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- A ~= 0 when 'x' finishes (similar for 'B','y')", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "turn");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"A\"", value: ImmutableArray.Create("A"U8.ToArray()));
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "turn");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"B\"", value: ImmutableArray.Create("B"U8.ToArray()));
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- check that traceback works correctly after yields inside hooks", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "traceback");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "traceback");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "B");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- fact(7) // fact(6)", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- hooks vs. multiple values", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'pushint' just to perturb the stack", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pushint 10; yield 0\"", value: ImmutableArray.Create("pushint 10; yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"\"", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yield at each op.", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- must keep top between ops.", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- arguments to the coroutine are just to perturb its stack", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "done");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "line");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"l\"", value: ImmutableArray.Create("l"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "currentline");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- get line number", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "--<< this line is 'line'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing yields in line hook", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"setglobal X; yield 0\"", value: ImmutableArray.Create("setglobal X; yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"l\"", value: ImmutableArray.Create("l"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "line");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "line");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "line");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "line");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing yields in count hook", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 0\"", value: ImmutableArray.Create("yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"\"", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 0\"", value: ImmutableArray.Create("yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"\"", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "XX");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing debug library on a coroutine suspended inside a hook", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- (bug in 5.2/5.3)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 0\"", value: ImmutableArray.Create("yield 0"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"l\"", value: ImmutableArray.Create("l"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- will yield on next two lines", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- start coroutine", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getlocal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- check its local", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "setlocal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- test 'setlocal'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- test 'getinfo'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "currentline");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "linedefined");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- no other level", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- run next line", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- finish coroutine", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing debug library on last function in a suspended coroutine", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- (bug in 5.2/5.3)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"yield 1\"", value: ImmutableArray.Create("yield 1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "linedefined");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getlocal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"testing coroutine API\"", value: ImmutableArray.Create("testing coroutine API"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- reusing a thread", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    newthread      # create thread\n    pushvalue 2    # push body\n    pushstring 'a a a'  # push argument\n    xmove 0 3 2   # move values to new thread\n    resume -1, 1    # call it first time\n    pushstatus\n    xmove 3 0 0   # move results back to stack\n    setglobal X    # result\n    setglobal Y    # status\n    pushvalue 2     # push body (to call it again)\n    pushstring 'b b b'\n    xmove 0 3 2\n    resume -1, 1    # call it again\n    pushstatus\n    xmove 3 0 0\n    return 1        # return result\n  ]]", value: ImmutableArray.Create("    newthread      # create thread\n    pushvalue 2    # push body\n    pushstring 'a a a'  # push argument\n    xmove 0 3 2   # move values to new thread\n    resume -1, 1    # call it first time\n    pushstatus\n    xmove 3 0 0   # move results back to stack\n    setglobal X    # result\n    setglobal Y    # status\n    pushvalue 2     # push body (to call it again)\n    pushstring 'b b b'\n    xmove 0 3 2\n    resume -1, 1    # call it again\n    pushstatus\n    xmove 3 0 0\n    return 1        # return result\n  "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'b b b'", value: ImmutableArray.Create("b b b"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'a a a'", value: ImmutableArray.Create("a a a"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- resuming running coroutine", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n                 pushnum 10;\n                 pushnum 20;\n                 resume -3 2;\n                 pushstatus\n                 gettop;\n                 return 3]]", value: ImmutableArray.Create("                 pushnum 10;\n                 pushnum 20;\n                 resume -3 2;\n                 pushstatus\n                 gettop;\n                 return 3"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "C");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"non%-suspended\"", value: ImmutableArray.Create("non%-suspended"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ERRRUN\"", value: ImmutableArray.Create("ERRRUN"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    rawgeti R 1    # get main thread\n    pushnum 10;\n    pushnum 20;\n    resume -3 2;\n    pushstatus\n    gettop;\n    return 4]]", value: ImmutableArray.Create("    rawgeti R 1    # get main thread\n    pushnum 10;\n    pushnum 20;\n    resume -3 2;\n    pushstatus\n    gettop;\n    return 4"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"non%-suspended\"", value: ImmutableArray.Create("non%-suspended"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ERRRUN\"", value: ImmutableArray.Create("ERRRUN"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- using a main thread as a coroutine  (dubious use!)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "newstate");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- check that yielddable is working correctly", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"newthread; isyieldable -1; remove 1; return 1\"", value: ImmutableArray.Create("newthread; isyieldable -1; remove 1; return 1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- main thread is not yieldable", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"rawgeti R 1; isyieldable -1; remove 1; return 1\"", value: ImmutableArray.Create("rawgeti R 1; isyieldable -1; remove 1; return 1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"settop 0\"", value: ImmutableArray.Create("settop 0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "loadlib");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "doremote");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    coroutine = require'coroutine';\n    X = function (x) coroutine.yield(x, 'BB'); return 'CC' end;\n    return 'ok']]", value: ImmutableArray.Create("    coroutine = require'coroutine';\n    X = function (x) coroutine.yield(x, 'BB'); return 'CC' end;\n    return 'ok'"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    rawgeti R 1     # get main thread\n    pushstring 'XX'\n    getglobal X    # get function for body\n    pushstring AA      # arg\n    resume 1 1      # 'resume' shadows previous stack!\n    gettop\n    setglobal T    # top\n    setglobal B    # second yielded value\n    setglobal A    # fist yielded value\n    rawgeti R 1     # get main thread\n    pushnum 5       # arg (noise)\n    resume 1 1      # after coroutine ends, previous stack is back\n    pushstatus\n    return *\n  ]]", value: ImmutableArray.Create("    rawgeti R 1     # get main thread\n    pushstring 'XX'\n    getglobal X    # get function for body\n    pushstring AA      # arg\n    resume 1 1      # 'resume' shadows previous stack!\n    gettop\n    setglobal T    # top\n    setglobal B    # second yielded value\n    setglobal A    # fist yielded value\n    rawgeti R 1     # get main thread\n    pushnum 5       # arg (noise)\n    resume 1 1      # after coroutine ends, previous stack is back\n    pushstatus\n    return *\n  "U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'XX'", value: ImmutableArray.Create("XX"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'CC'", value: ImmutableArray.Create("CC"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "doremote");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"return T\"", value: ImmutableArray.Create("return T"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'2'", value: ImmutableArray.Create("2"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "doremote");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"return A\"", value: ImmutableArray.Create("return A"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'AA'", value: ImmutableArray.Create("AA"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "doremote");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"return B\"", value: ImmutableArray.Create("return B"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'BB'", value: ImmutableArray.Create("BB"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "closestate");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "state");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- leaving a pending coroutine open", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "TO_SURVIVE");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "TO_SURVIVE");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_soft");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- bug (stack overflow)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000000", value: 1000000L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- stack limit; assume 32-bit machine", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- must fail for unpacking larger than stack limit", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "main");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"+\"", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"testing yields inside metamethods\"", value: ImmutableArray.Create("testing yields inside metamethods"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"table\"", value: ImmutableArray.Create("table"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__eq");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"eq\"", value: ImmutableArray.Create("eq"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__lt");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"lt\"", value: ImmutableArray.Create("lt"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__le");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"le\"", value: ImmutableArray.Create("le"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__add");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"add\"", value: ImmutableArray.Create("add"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__sub");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__mul");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"mul\"", value: ImmutableArray.Create("mul"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__div");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"div\"", value: ImmutableArray.Create("div"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__idiv");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"idiv\"", value: ImmutableArray.Create("idiv"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__pow");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"pow\"", value: ImmutableArray.Create("pow"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__mod");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"mod\"", value: ImmutableArray.Create("mod"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__unm");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"unm\"", value: ImmutableArray.Create("unm"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__bnot");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"bnot\"", value: ImmutableArray.Create("bnot"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__shl");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"shl\"", value: ImmutableArray.Create("shl"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__shr");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"shr\"", value: ImmutableArray.Create("shr"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__band");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"band\"", value: ImmutableArray.Create("band"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__bor");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"bor\"", value: ImmutableArray.Create("bor"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__bxor");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"bxor\"", value: ImmutableArray.Create("bxor"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__concat");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__index");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"idx\"", value: ImmutableArray.Create("idx"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"nidx\"", value: ImmutableArray.Create("nidx"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.StringLiteralToken, text: "\"hello\"", value: ImmutableArray.Create("hello"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'>='", value: ImmutableArray.Create(">="U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'<'", value: ImmutableArray.Create("<"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"le\"", value: ImmutableArray.Create("le"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"<\"", value: ImmutableArray.Create("<"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'<='", value: ImmutableArray.Create("<="U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'>'", value: ImmutableArray.Create(">"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"le\"", value: ImmutableArray.Create("le"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"<=\"", value: ImmutableArray.Create("<="U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'=='", value: ImmutableArray.Create("=="U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'~='", value: ImmutableArray.Create("~="U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"eq\"", value: ImmutableArray.Create("eq"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"~=\"", value: ImmutableArray.Create("~="U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"add\"", value: ImmutableArray.Create("add"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"band\"", value: ImmutableArray.Create("band"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"add\"", value: ImmutableArray.Create("add"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "25", value: 25L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "15", value: 15L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mul\"", value: ImmutableArray.Create("mul"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pow\"", value: ImmutableArray.Create("pow"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"div\"", value: ImmutableArray.Create("div"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mod\"", value: ImmutableArray.Create("mod"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idiv\"", value: ImmutableArray.Create("idiv"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"add\"", value: ImmutableArray.Create("add"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "22", value: 22L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mul\"", value: ImmutableArray.Create("mul"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "120", value: 120L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pow\"", value: ImmutableArray.Create("pow"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"div\"", value: ImmutableArray.Create("div"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mod\"", value: ImmutableArray.Create("mod"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idiv\"", value: ImmutableArray.Create("idiv"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- repeat tests with larger constants (to use 'K' opcodes)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"add\"", value: ImmutableArray.Create("add"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2000", value: 2000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "25000", value: 25000L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"sub\"", value: ImmutableArray.Create("sub"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "24000", value: 24000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2000", value: 2000L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mul\"", value: ImmutableArray.Create("mul"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20000", value: 20000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"div\"", value: ImmutableArray.Create("div"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "600", value: 600L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mod\"", value: ImmutableArray.Create("mod"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "400", value: 400L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a1000");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "500", value: 500L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idiv\"", value: ImmutableArray.Create("idiv"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"mod\"", value: ImmutableArray.Create("mod"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bnot\"", value: ImmutableArray.Create("bnot"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"band\"", value: ImmutableArray.Create("band"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bor\"", value: ImmutableArray.Create("bor"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bxor\"", value: ImmutableArray.Create("bxor"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shl\"", value: ImmutableArray.Create("shl"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shr\"", value: ImmutableArray.Create("shr"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"band\"", value: ImmutableArray.Create("band"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bor\"", value: ImmutableArray.Create("bor"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bxor\"", value: ImmutableArray.Create("bxor"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shr\"", value: ImmutableArray.Create("shr"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shr\"", value: ImmutableArray.Create("shr"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shl\"", value: ImmutableArray.Create("shl"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"shl\"", value: ImmutableArray.Create("shl"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bxor\"", value: ImmutableArray.Create("bxor"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"1012\"", value: ImmutableArray.Create("1012"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"1012hello10\"", value: ImmutableArray.Create("1012hello10"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"b\"", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"c\"", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"concat\"", value: ImmutableArray.Create("concat"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ab10chello12x\"", value: ImmutableArray.Create("ab10chello12x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- a few more tests for comparison operators", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__le");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__lt");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt2");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "__lt");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt1");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__lt");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "__le");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt1");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__le");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "BB");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "BB");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"nidx\"", value: ImmutableArray.Create("nidx"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"idx\"", value: ImmutableArray.Create("idx"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- getuptable & setuptable", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "AAA");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "BBB");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "AAA");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "new");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "BBB");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "setupvalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"idx\"", value: ImmutableArray.Create("idx"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"nidx\"", value: ImmutableArray.Create("nidx"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"idx\"", value: ImmutableArray.Create("idx"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "AAA");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"+\"", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"testing yields inside 'for' iterators\"", value: ImmutableArray.Create("testing yields inside 'for' iterators"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PersentToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"for\"", value: ImmutableArray.Create("for"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "run");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"for\"", value: ImmutableArray.Create("for"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"for\"", value: ImmutableArray.Create("for"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"for\"", value: ImmutableArray.Create("for"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- tests for coroutine API", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: skipping coroutine API tests <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping coroutine API tests <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"OK\"", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'testing coroutine API'", value: ImmutableArray.Create("testing coroutine API"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "apico");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "apico");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n  pushstring errorcode\n  pcallk 1 0 2;\n  invalid command (should not arrive here)\n]]", value: ImmutableArray.Create("  pushstring errorcode\n  pcallk 1 0 2;\n  invalid command (should not arrive here)\n"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[return *]]", value: ImmutableArray.Create("return *"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"stackmark\"", value: ImmutableArray.Create("stackmark"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"stackmark\"", value: ImmutableArray.Create("stackmark"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"errorcode\"", value: ImmutableArray.Create("errorcode"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ERRRUN\"", value: ImmutableArray.Create("ERRRUN"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "ctx");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'ctx' to pcallk", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "apico");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "\"pushvalue 2; pushnum 10; pcallk 1 2 3; invalid command;\"", value: ImmutableArray.Create("pushvalue 2; pushnum 10; pcallk 1 2 3; invalid command;"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "\"getglobal status; getglobal ctx; pushvalue 2; pushstring a; pcallk 1 0 4; invalid command\"", value: ImmutableArray.Create("getglobal status; getglobal ctx; pushvalue 2; pushstring a; pcallk 1 0 4; invalid command"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "\"getglobal status; getglobal ctx; return *\"", value: ImmutableArray.Create("getglobal status; getglobal ctx; return *"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"YIELD\"", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"YIELD\"", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- coroutine is dead now", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pushnum 3; pushnum 5; yield 1;\"", value: ImmutableArray.Create("pushnum 3; pushnum 5; yield 1;"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing coroutines with C bodies", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n        pushnum 102\n\tyieldk\t1 U2\n\tcannot be here!\n]]", value: ImmutableArray.Create("        pushnum 102\n\tyieldk\t1 U2\n\tcannot be here!\n"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[      # continuation\n\tpushvalue U3   # accessing upvalues inside a continuation\n        pushvalue U4\n\treturn *\n]]", value: ImmutableArray.Create("      # continuation\n\tpushvalue U3   # accessing upvalues inside a continuation\n        pushvalue U4\n\treturn *\n"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"huu\"", value: ImmutableArray.Create("huu"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "102", value: 102L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "eqtab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"huu\"", value: ImmutableArray.Create("huu"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[pushstring 'a'; pushnum 102; yield 2; ]]", value: ImmutableArray.Create("pushstring 'a'; pushnum 102; yield 2; "U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[newthread; pushvalue 2; xmove 0 3 1; resume 3 0;\n                       pushstatus; xmove 3 0 0;  resume 3 0; pushstatus;\n                       return 4; ]]", value: ImmutableArray.Create("newthread; pushvalue 2; xmove 0 3 1; resume 3 0;\n                       pushstatus; xmove 3 0 0;  resume 3 0; pushstatus;\n                       return 4; "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'YIELD'", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "102", value: 102L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing chain of suspendable C calls", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- number of levels", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n  remove 1;             # remove argument\n  pushvalue U3;         # get selection function\n  call 0 1;             # call it  (result is 'f' or 'yield')\n  pushstring hello      # single argument for selected function\n  pushupvalueindex 2;   # index of continuation program\n  callk 1 -1 .;\t\t# call selected function\n  errorerror\t\t# should never arrive here\n]]", value: ImmutableArray.Create("  remove 1;             # remove argument\n  pushvalue U3;         # get selection function\n  call 0 1;             # call it  (result is 'f' or 'yield')\n  pushstring hello      # single argument for selected function\n  pushupvalueindex 2;   # index of continuation program\n  callk 1 -1 .;\t\t# call selected function\n  errorerror\t\t# should never arrive here\n"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n  # continuation program\n  pushnum 34\t# return value\n  return *     # return all results\n]]", value: ImmutableArray.Create("  # continuation program\n  pushnum 34\t# return value\n  return *     # return all results\n"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- selection function", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"hello\"", value: ImmutableArray.Create("hello"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- argument to 'yield'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- three '34's (one from each pending C call)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "34", value: 34L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing yields with continuations", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[ # initial function\n          yieldk 1 2\n          cannot be here!\n       ]]", value: ImmutableArray.Create(" # initial function\n          yieldk 1 2\n          cannot be here!\n       "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[  # 1st continuation\n         yieldk 0 3 \n         cannot be here!\n       ]]", value: ImmutableArray.Create("  # 1st continuation\n         yieldk 0 3 \n         cannot be here!\n       "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[  # 2nd continuation\n         yieldk 0 4 \n         cannot be here!\n       ]]", value: ImmutableArray.Create("  # 2nd continuation\n         yieldk 0 4 \n         cannot be here!\n       "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[  # 3th continuation\n          pushvalue 6   # function which is last arg. to 'testC' here\n          pushnum 10; pushnum 20;\n          pcall 2 0 0   # call should throw an error and return to next line\n          pop 1\t\t# remove error message\n          pushvalue 6\n          getglobal status; getglobal ctx\n          pcallk 2 2 5  # call should throw an error and jump to continuation\n          cannot be here!\n       ]]", value: ImmutableArray.Create("  # 3th continuation\n          pushvalue 6   # function which is last arg. to 'testC' here\n          pushnum 10; pushnum 20;\n          pcall 2 0 0   # call should throw an error and return to next line\n          pop 1\t\t# remove error message\n          pushvalue 6\n          getglobal status; getglobal ctx\n          pcallk 2 2 5  # call should throw an error and jump to continuation\n          cannot be here!\n       "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[  # 4th (and last) continuation\n         return *\n       ]]", value: ImmutableArray.Create("  # 4th (and last) continuation\n         return *\n       "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- function called by 3th continuation", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"errmsg\"", value: ImmutableArray.Create("errmsg"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"YIELD\"", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "ctx");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"YIELD\"", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "ctx");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- original arguments", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'string'", value: ImmutableArray.Create("string"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'string'", value: ImmutableArray.Create("string"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'string'", value: ImmutableArray.Create("string"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'string'", value: ImmutableArray.Create("string"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'string'", value: ImmutableArray.Create("string"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'function'", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- arguments left from fist resume", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- arguments to last resume", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error message and nothing more", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.ColonToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"errmsg\"", value: ImmutableArray.Create("errmsg"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- check arguments to pcallk", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"YIELD\"", value: ImmutableArray.Create("YIELD"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- coroutine should be dead", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "ctx");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "status");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- bug in nCcalls", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"hi\"", value: ImmutableArray.Create("hi"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"hi\"", value: ImmutableArray.Create("hi"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfFileToken);
    }
}
