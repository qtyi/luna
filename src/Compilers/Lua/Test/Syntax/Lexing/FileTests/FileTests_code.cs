// Licensed to the Qtyi under one or more agreements.
// The Qtyi licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System.Collections.Immutable;
using Microsoft.CodeAnalysis;
using Qtyi.CodeAnalysis.Lua.Test.Utilities;

namespace Qtyi.CodeAnalysis.Lua.UnitTests.Lexing;

partial class FileTests
{
    private void TestOfficialTestFile_code(string source, SourceCodeKind kind)
    {
        var V = LexSource(source, options: TestOptions.RegularDefault.WithKind(kind));

        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: skipping opcode tests <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping opcode tests <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"testing code generation and optimizations\"", value: ImmutableArray.Create("testing code generation and optimizations"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k0aux");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k0aux");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k1");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k6");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "kFF0");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0xFF0", value: 4080L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k3_78");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.78", value: 3.78D);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k3_78_4");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k3_78");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "kx");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "kTrue");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "kFalse");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "w");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "list");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listk");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "list");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "list");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "list");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k3_78");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k3_78_4");
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "k3_78");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k3_78");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.78", value: 3.78D);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.79", value: 3.79D);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.0", value: 3D);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.0", value: 3D);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.78", value: 3.78D);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.78", value: 3.78D);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.79", value: 3.79D);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100.0", value: 100D);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000.0", value: 1000D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000", value: 100000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000.0", value: 100000D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000", value: 100000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000.0", value: 100000D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000", value: 100000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000.0", value: 100000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000", value: 100000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000.0", value: 100000D);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listcode");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "opcode");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "match");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"%u%w+\"", value: ImmutableArray.Create("%u%w+"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "opcode");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "r1");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "r1");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "r1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkequal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listcode");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listcode");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gsub");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'%b()'", value: ImmutableArray.Create("%b()"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "''", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gsub");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'%b()'", value: ImmutableArray.Create("%b()"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "''", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'CLOSURE'", value: ImmutableArray.Create("CLOSURE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'NEWTABLE'", value: ImmutableArray.Create("NEWTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'EXTRAARG'", value: ImmutableArray.Create("EXTRAARG"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABUP'", value: ImmutableArray.Create("GETTABUP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETLIST'", value: ImmutableArray.Create("SETLIST"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'CLOSURE'", value: ImmutableArray.Create("CLOSURE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'NEWTABLE'", value: ImmutableArray.Create("NEWTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'EXTRAARG'", value: ImmutableArray.Create("EXTRAARG"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABUP'", value: ImmutableArray.Create("GETTABUP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETLIST'", value: ImmutableArray.Create("SETLIST"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN'", value: ImmutableArray.Create("RETURN"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.IdentifierToken, text: "kTrue");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'CONCAT'", value: ImmutableArray.Create("CONCAT"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADFALSE'", value: ImmutableArray.Create("LOADFALSE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "kFalse");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADFALSE'", value: ImmutableArray.Create("LOADFALSE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADTRUE'", value: ImmutableArray.Create("LOADTRUE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADTRUE'", value: ImmutableArray.Create("LOADTRUE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MUL'", value: ImmutableArray.Create("MUL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'DIV'", value: ImmutableArray.Create("DIV"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'ADD'", value: ImmutableArray.Create("ADD"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABLE'", value: ImmutableArray.Create("GETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SUB'", value: ImmutableArray.Create("SUB"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GETFIELD'", value: ImmutableArray.Create("GETFIELD"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'POW'", value: ImmutableArray.Create("POW"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'UNM'", value: ImmutableArray.Create("UNM"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETFIELD'", value: ImmutableArray.Create("SETFIELD"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "kx");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.2", value: 3.2D);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'x'", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETFIELD'", value: ImmutableArray.Create("SETFIELD"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETFIELD'", value: ImmutableArray.Create("SETFIELD"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k255");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "255", value: 255L);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k255");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "256", value: 256L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "256", value: 256L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GETI'", value: ImmutableArray.Create("GETI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETI'", value: ImmutableArray.Create("SETI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABLE'", value: ImmutableArray.Create("GETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETI'", value: ImmutableArray.Create("SETI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SUB'", value: ImmutableArray.Create("SUB"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'DIV'", value: ImmutableArray.Create("DIV"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "kTrue");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADTRUE'", value: ImmutableArray.Create("LOADTRUE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'EQI'", value: ImmutableArray.Create("EQI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4.0", value: 4D);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'EQI'", value: ImmutableArray.Create("EQI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"hi\"", value: ImmutableArray.Create("hi"U8.ToArray()));
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'EQK'", value: ImmutableArray.Create("EQK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'EQK'", value: ImmutableArray.Create("EQK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'EQK'", value: ImmutableArray.Create("EQK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GEI'", value: ImmutableArray.Create("GEI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "128.0", value: 128D);
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "129", value: 129L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LTI'", value: ImmutableArray.Create("LTI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "127.0", value: 127D);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GTI'", value: ImmutableArray.Create("GTI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GTI'", value: ImmutableArray.Create("GTI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "129", value: 129L);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "130", value: 130L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LT'", value: ImmutableArray.Create("LT"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "23.0", value: 23D);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "25", value: 25L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GEI'", value: ImmutableArray.Create("GEI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "23.1", value: 23.1D);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADK'", value: ImmutableArray.Create("LOADK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LE'", value: ImmutableArray.Create("LE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "2300.0", value: 2300D);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LT'", value: ImmutableArray.Create("LT"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADK'", value: ImmutableArray.Create("LOADK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "31", value: 31L);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "0x20000000", value: 536870912L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.0", value: 3D);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "5.0", value: 5D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7.0", value: 7D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "0xF0.0", value: 1.3642420526593924E-11D);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.NumericLiteralToken, text: "0xCC.0", value: 1.1596057447604835E-11D);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.NumericLiteralToken, text: "0xAA", value: 170L);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.NumericLiteralToken, text: "0xFD", value: 253L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0xF4", value: 244L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.IdentifierToken, text: "kFF0");
        V(SyntaxKind.BarToken);
        V(SyntaxKind.IdentifierToken, text: "kFF0");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1024.0", value: 1024D);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1024", value: 1024L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.IdentifierToken, text: "k6");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "17", value: 17L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "65535", value: 65535L);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "65535.0", value: 65535D);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "k1");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'ADDI'", value: ImmutableArray.Create("ADDI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "117", value: 117L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'ADDI'", value: ImmutableArray.Create("ADDI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "128", value: 128L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "128.0", value: 128D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'ADDI'", value: ImmutableArray.Create("ADDI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "127.0", value: 127D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MULK'", value: ImmutableArray.Create("MULK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MULK'", value: ImmutableArray.Create("MULK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.25", value: 0.25D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'POWK'", value: ImmutableArray.Create("POWK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'DIVK'", value: ImmutableArray.Create("DIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10.0", value: 10D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10.0", value: 10D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'IDIVK'", value: ImmutableArray.Create("IDIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "91", value: 91L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MODK'", value: ImmutableArray.Create("MODK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "k1");
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SHLI'", value: ImmutableArray.Create("SHLI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SHRI'", value: ImmutableArray.Create("SHRI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SHRI'", value: ImmutableArray.Create("SHRI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "128", value: 128L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SHRI'", value: ImmutableArray.Create("SHRI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SHRI'", value: ImmutableArray.Create("SHRI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'BANDK'", value: ImmutableArray.Create("BANDK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'BORK'", value: ImmutableArray.Create("BORK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'BXORK'", value: ImmutableArray.Create("BXORK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'ADDK'", value: ImmutableArray.Create("ADDK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "20000", value: 20000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MULK'", value: ImmutableArray.Create("MULK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.5", value: 0.5D);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'POWK'", value: ImmutableArray.Create("POWK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'DIVK'", value: ImmutableArray.Create("DIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'IDIVK'", value: ImmutableArray.Create("IDIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100.0", value: 100D);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "91", value: 91L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MODK'", value: ImmutableArray.Create("MODK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'UNM'", value: ImmutableArray.Create("UNM"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'DIVK'", value: ImmutableArray.Create("DIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MODK'", value: ImmutableArray.Create("MODK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'IDIVK'", value: ImmutableArray.Create("IDIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SHR'", value: ImmutableArray.Create("SHR"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "128", value: 128L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SHL'", value: ImmutableArray.Create("SHL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'BAND'", value: ImmutableArray.Create("BAND"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10.5", value: 10.5D);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADK'", value: ImmutableArray.Create("LOADK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'FORPREP'", value: ImmutableArray.Create("FORPREP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'FORLOOP'", value: ImmutableArray.Create("FORLOOP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0xfffffff", value: 268435455L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10.0", value: 10D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADK'", value: ImmutableArray.Create("LOADK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'FORPREP'", value: ImmutableArray.Create("FORPREP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'FORLOOP'", value: ImmutableArray.Create("FORLOOP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'UNM'", value: ImmutableArray.Create("UNM"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "kx");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABUP'", value: ImmutableArray.Create("GETTABUP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABUP'", value: ImmutableArray.Create("SETTABUP"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GETUPVAL'", value: ImmutableArray.Create("GETUPVAL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GETUPVAL'", value: ImmutableArray.Create("GETUPVAL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABLE'", value: ImmutableArray.Create("GETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkequal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkequal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "l");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "l");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "l");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "l");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'TEST'", value: ImmutableArray.Create("TEST"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'TEST'", value: ImmutableArray.Create("TEST"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'ADDI'", value: ImmutableArray.Create("ADDI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkequal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "k6");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "kTrue");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkequal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "k6");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "kTrue");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"00000000000000000000000000000000000000000000000000\"", value: ImmutableArray.Create("00000000000000000000000000000000000000000000000000"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f2");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f3");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "f2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f3");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f3");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listk");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listk");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.EndOfFileToken);
    }

    private void TestOfficialTestFileWithTrivia_code(string source, SourceCodeKind kind)
    {
        var V = LexSource(source, options: TestOptions.RegularDefault.WithKind(kind), withTrivia: true);

        V(SyntaxKind.SingleLineCommentTrivia, text: "-- $Id: testes/code.lua $", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- See Copyright Notice in file all.lua", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: skipping opcode tests <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping opcode tests <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"testing code generation and optimizations\"", value: ImmutableArray.Create("testing code generation and optimizations"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- to test constant propagation", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k0aux");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k0aux");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k6");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kFF0");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0xFF0", value: 4080L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3_78");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3.78", value: 3.78D);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3_78_4");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3_78");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kTrue");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kFalse");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- this code gave an error for the code checker", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "w");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing reuse in constant table", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "list");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listk");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "list");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "list");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "list");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3_78");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3_78_4");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "k3_78");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3_78");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.78", value: 3.78D);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.79", value: 3.79D);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3.0", value: 3D);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3.0", value: 3D);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.78", value: 3.78D);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.78", value: 3.78D);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3.79", value: 3.79D);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100.0", value: 100D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000.0", value: 1000D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000", value: 100000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000.0", value: 100000D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000", value: 100000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000.0", value: 100000D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000", value: 100000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100000.0", value: 100000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000", value: 100000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "100000.0", value: 100000D);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- floats x integers", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing opcodes", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- check that 'f' opcodes match '...'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listcode");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "opcode");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "match");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"%u%w+\"", value: ImmutableArray.Create("%u%w+"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- print(arg[i], opcode)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "opcode");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- check that 'f' opcodes match '...' and that 'f(p) == r'.", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "r1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "r1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "r");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "r1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- check that 'a' and 'b' has the same opcodes", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkequal");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listcode");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listcode");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gsub");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'%b()'", value: ImmutableArray.Create("%b()"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "''", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- remove line number", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gsub");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'%b()'", value: ImmutableArray.Create("%b()"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "''", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- remove line number", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- some basic instructions", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- function does not create upvalues", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'CLOSURE'", value: ImmutableArray.Create("CLOSURE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'NEWTABLE'", value: ImmutableArray.Create("NEWTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'EXTRAARG'", value: ImmutableArray.Create("EXTRAARG"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABUP'", value: ImmutableArray.Create("GETTABUP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'SETLIST'", value: ImmutableArray.Create("SETLIST"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- function creates upvalues", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'CLOSURE'", value: ImmutableArray.Create("CLOSURE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'NEWTABLE'", value: ImmutableArray.Create("NEWTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'EXTRAARG'", value: ImmutableArray.Create("EXTRAARG"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABUP'", value: ImmutableArray.Create("GETTABUP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'SETLIST'", value: ImmutableArray.Create("SETLIST"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN'", value: ImmutableArray.Create("RETURN"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- sequence of LOADNILs", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "g");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- single return", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- infinite loops", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kTrue");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- concat optimization", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'CONCAT'", value: ImmutableArray.Create("CONCAT"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- not", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADFALSE'", value: ImmutableArray.Create("LOADFALSE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kFalse");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADFALSE'", value: ImmutableArray.Create("LOADFALSE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADTRUE'", value: ImmutableArray.Create("LOADTRUE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADTRUE'", value: ImmutableArray.Create("LOADTRUE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- direct access to locals", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'MUL'", value: ImmutableArray.Create("MUL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'DIV'", value: ImmutableArray.Create("DIV"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'ADD'", value: ImmutableArray.Create("ADD"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABLE'", value: ImmutableArray.Create("GETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SUB'", value: ImmutableArray.Create("SUB"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'GETFIELD'", value: ImmutableArray.Create("GETFIELD"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'POW'", value: ImmutableArray.Create("POW"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'UNM'", value: ImmutableArray.Create("UNM"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETFIELD'", value: ImmutableArray.Create("SETFIELD"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- direct access to constants", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "kx");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3.2", value: 3.2D);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'x'", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETFIELD'", value: ImmutableArray.Create("SETFIELD"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETFIELD'", value: ImmutableArray.Create("SETFIELD"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- \"get/set table\" with numeric indices", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k255");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "255", value: 255L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k255");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "256", value: 256L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "256", value: 256L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'GETI'", value: ImmutableArray.Create("GETI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETI'", value: ImmutableArray.Create("SETI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABLE'", value: ImmutableArray.Create("GETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETI'", value: ImmutableArray.Create("SETI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SUB'", value: ImmutableArray.Create("SUB"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'DIV'", value: ImmutableArray.Create("DIV"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "kTrue");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADTRUE'", value: ImmutableArray.Create("LOADTRUE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- equalities", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'EQI'", value: ImmutableArray.Create("EQI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4.0", value: 4D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'EQI'", value: ImmutableArray.Create("EQI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"hi\"", value: ImmutableArray.Create("hi"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'EQK'", value: ImmutableArray.Create("EQK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'EQK'", value: ImmutableArray.Create("EQK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- number too large", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'EQK'", value: ImmutableArray.Create("EQK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- number too large", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- comparisons", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'GEI'", value: ImmutableArray.Create("GEI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "128.0", value: 128D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "129", value: 129L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'LTI'", value: ImmutableArray.Create("LTI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "127.0", value: 127D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'GTI'", value: ImmutableArray.Create("GTI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'GTI'", value: ImmutableArray.Create("GTI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "129", value: 129L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "130", value: 130L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LT'", value: ImmutableArray.Create("LT"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "23.0", value: 23D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "25", value: 25L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'GEI'", value: ImmutableArray.Create("GEI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "23.1", value: 23.1D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'LOADK'", value: ImmutableArray.Create("LOADK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LE'", value: ImmutableArray.Create("LE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2300.0", value: 2300D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LT'", value: ImmutableArray.Create("LT"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- constant folding", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADK'", value: ImmutableArray.Create("LOADK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkKlist");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "func");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "val");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "31", value: 31L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "0x20000000", value: 536870912L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3.0", value: 3D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "5.0", value: 5D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7.0", value: 7D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0xF0.0", value: 1.3642420526593924E-11D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0xCC.0", value: 1.1596057447604835E-11D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0xAA", value: 170L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0xFD", value: 253L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0xF4", value: 244L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.IdentifierToken, text: "kFF0");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kFF0");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1024.0", value: 1024D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1024", value: 1024L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k6");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- borders around MAXARG_sBx ((((1 << 17) - 1) >> 1) == 65535)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "17", value: 17L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- avoid folding", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "65535", value: 65535L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkI");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "65535.0", value: 65535D);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkF");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "border");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sbx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- immediate operands", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'ADDI'", value: ImmutableArray.Create("ADDI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "117", value: 117L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'ADDI'", value: ImmutableArray.Create("ADDI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "128", value: 128L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "128.0", value: 128D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'ADDI'", value: ImmutableArray.Create("ADDI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "127.0", value: 127D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'MULK'", value: ImmutableArray.Create("MULK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MULK'", value: ImmutableArray.Create("MULK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.25", value: 0.25D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'POWK'", value: ImmutableArray.Create("POWK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'DIVK'", value: ImmutableArray.Create("DIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10.0", value: 10D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10.0", value: 10D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'IDIVK'", value: ImmutableArray.Create("IDIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "91", value: 91L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'MODK'", value: ImmutableArray.Create("MODK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SHLI'", value: ImmutableArray.Create("SHLI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SHRI'", value: ImmutableArray.Create("SHRI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SHRI'", value: ImmutableArray.Create("SHRI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "128", value: 128L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SHRI'", value: ImmutableArray.Create("SHRI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "127", value: 127L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SHRI'", value: ImmutableArray.Create("SHRI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'BANDK'", value: ImmutableArray.Create("BANDK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BarToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'BORK'", value: ImmutableArray.Create("BORK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'BXORK'", value: ImmutableArray.Create("BXORK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- K operands in arithmetic operations", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'ADDK'", value: ImmutableArray.Create("ADDK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "--  check(function (x) return 128 + x end, 'ADDK', 'MMBINK', 'RETURN1')", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "20000", value: 20000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'MULK'", value: ImmutableArray.Create("MULK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "--  check(function (x) return 20 * x end, 'MULK', 'MMBINK', 'RETURN1')", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.5", value: 0.5D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'POWK'", value: ImmutableArray.Create("POWK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'DIVK'", value: ImmutableArray.Create("DIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'IDIVK'", value: ImmutableArray.Create("IDIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkR");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100.0", value: 100D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "91", value: 91L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'MODK'", value: ImmutableArray.Create("MODK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- no foldings (and immediate operands)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'UNM'", value: ImmutableArray.Create("UNM"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k3");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'DIVK'", value: ImmutableArray.Create("DIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.PercentToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MODK'", value: ImmutableArray.Create("MODK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'IDIVK'", value: ImmutableArray.Create("IDIVK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINK'", value: ImmutableArray.Create("MMBINK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanGreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SHR'", value: ImmutableArray.Create("SHR"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanLessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "128", value: 128L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SHL'", value: ImmutableArray.Create("SHL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AmpersandToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2.0", value: 2D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'BAND'", value: ImmutableArray.Create("BAND"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBIN'", value: ImmutableArray.Create("MMBIN"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- basic 'for' loops", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10.5", value: 10.5D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADK'", value: ImmutableArray.Create("LOADK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'FORPREP'", value: ImmutableArray.Create("FORPREP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'FORLOOP'", value: ImmutableArray.Create("FORLOOP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0xfffffff", value: 268435455L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10.0", value: 10D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADK'", value: ImmutableArray.Create("LOADK"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADF'", value: ImmutableArray.Create("LOADF"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADI'", value: ImmutableArray.Create("LOADI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'FORPREP'", value: ImmutableArray.Create("FORPREP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'FORLOOP'", value: ImmutableArray.Create("FORLOOP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- bug in constant folding for 5.1", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'UNM'", value: ImmutableArray.Create("UNM"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN1'", value: ImmutableArray.Create("RETURN1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'LOADNIL'", value: ImmutableArray.Create("LOADNIL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- no code for a = a", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- x == nil , x ~= nil", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- checkequal(function (b) if (a==nil) then a=1 end; if a~=nil then a=1 end end,", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "--            function () if (a==9) then a=1 end; if a~=9 then a=1 end end)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- check(function () if a==nil then a='a' end end,", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'GETTABUP', 'EQ', 'JMP', 'SETTABUP', 'RETURN')", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- tests for table access in upvalues", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "kx");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABUP'", value: ImmutableArray.Create("GETTABUP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABUP'", value: ImmutableArray.Create("SETTABUP"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'GETUPVAL'", value: ImmutableArray.Create("GETUPVAL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MOVE'", value: ImmutableArray.Create("MOVE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'CALL'", value: ImmutableArray.Create("CALL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.StringLiteralToken, text: "'GETUPVAL'", value: ImmutableArray.Create("GETUPVAL"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'GETTABLE'", value: ImmutableArray.Create("GETTABLE"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'SETTABLE'", value: ImmutableArray.Create("SETTABLE"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- de morgan", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkequal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkequal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "l");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "l");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "l");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "l");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- if-break optimizations", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'TEST'", value: ImmutableArray.Create("TEST"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'TEST'", value: ImmutableArray.Create("TEST"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'ADDI'", value: ImmutableArray.Create("ADDI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'MMBINI'", value: ImmutableArray.Create("MMBINI"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'JMP'", value: ImmutableArray.Create("JMP"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'RETURN0'", value: ImmutableArray.Create("RETURN0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkequal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k6");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kTrue");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkequal");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k6");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kTrue");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "kNil");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- string constants", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"00000000000000000000000000000000000000000000000000\"", value: ImmutableArray.Create("00000000000000000000000000000000000000000000000000"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f2");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f3");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f3");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkK");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f3");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k0");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- string is not needed by other functions", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listk");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "listk");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfFileToken);
    }
}
