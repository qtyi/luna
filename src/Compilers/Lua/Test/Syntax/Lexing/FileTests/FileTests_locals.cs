// Licensed to the Qtyi under one or more agreements.
// The Qtyi licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System.Collections.Immutable;
using Microsoft.CodeAnalysis;
using Qtyi.CodeAnalysis.Lua.Test.Utilities;

namespace Qtyi.CodeAnalysis.Lua.UnitTests.Lexing;

partial class FileTests
{
    private void TestOfficialTestFile_locals(string source, SourceCodeKind kind)
    {
        var V = LexSource(source, options: TestOptions.RegularDefault.WithKind(kind));

        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'testing local variables and environments'", value: ImmutableArray.Create("testing local variables and environments"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "require");
        V(SyntaxKind.StringLiteralToken, text: "\"debug\"", value: ImmutableArray.Create("debug"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "tracegc");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "require");
        V(SyntaxKind.StringLiteralToken, text: "\"tracegc\"", value: ImmutableArray.Create("tracegc"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "select");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'local a = {}'", value: ImmutableArray.Create("local a = {}"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "_2");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "_3");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "_4");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "_5");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_6");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "_7");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "_8");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "_9");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "_10");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'q'", value: ImmutableArray.Create("q"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'function'", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "getenv");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getupvalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'_ENV'", value: ImmutableArray.Create("_ENV"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getenv");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.StringLiteralToken, text: "\"a=3\"", value: ImmutableArray.Create("a=3"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"a = 3\"", value: ImmutableArray.Create("a = 3"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getenv");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "format");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[local a=%s;\n                                        a=a+%s;\n                                        assert(a ==2^%s)]]", value: ImmutableArray.Create("local a=%s;\n                                        a=a+%s;\n                                        assert(a ==2^%s)"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "''", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "format");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[local a=%s;\n                                        a=a-%s;\n                                        assert(a==-2^%s)]]", value: ImmutableArray.Create("local a=%s;\n                                        a=a-%s;\n                                        assert(a==-2^%s)"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "''", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "format");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[local a,b=0,%s;\n                                        a=b-%s;\n                                        assert(a==-2^%s)]]", value: ImmutableArray.Create("local a,b=0,%s;\n                                        a=b-%s;\n                                        assert(a==-2^%s)"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "''", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "rawget");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"T\"", value: ImmutableArray.Create("T"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"stop\"", value: ImmutableArray.Create("stop"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "alo");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a1234567890123456789012345678901234567890");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'number'", value: ImmutableArray.Create("number"U8.ToArray()));
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'alo'", value: ImmutableArray.Create("alo"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "additems");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "huge");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "additems");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "dummy");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "dummy");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getenv");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'hi'", value: ImmutableArray.Create("hi"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'hi'", value: ImmutableArray.Create("hi"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'*'", value: ImmutableArray.Create("*"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.StringLiteralToken, text: "'*'", value: ImmutableArray.Create("*"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "60", value: 60L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "code");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "code");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "gab");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "format");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"attempt to assign to const variable '%s'\"", value: ImmutableArray.Create("attempt to assign to const variable '%s'"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "gab");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"local x, y <const>, z = 10, 20, 30; x = 11; y = 12\"", value: ImmutableArray.Create("local x, y <const>, z = 10, 20, 30; x = 11; y = 12"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"local x <const>, y, z <const> = 10, 20, 30; x = 11\"", value: ImmutableArray.Create("local x <const>, y, z <const> = 10, 20, 30; x = 11"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"local x <const>, y, z <const> = 10, 20, 30; y = 10; z = 11\"", value: ImmutableArray.Create("local x <const>, y, z <const> = 10, 20, 30; y = 10; z = 11"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"local foo <const> = 10; function foo() end\"", value: ImmutableArray.Create("local foo <const> = 10; function foo() end"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"local foo <const> = {}; function foo() end\"", value: ImmutableArray.Create("local foo <const> = {}; function foo() end"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    local a, z <const>, b = 10;\n    function foo() a = 20; z = 32; end\n  ]]", value: ImmutableArray.Create("    local a, z <const>, b = 10;\n    function foo() a = 20; z = 32; end\n  "U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"var1\"", value: ImmutableArray.Create("var1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    local a, var1 <const> = 10;\n    function foo() a = 20; z = function () var1 = 12; end  end\n  ]]", value: ImmutableArray.Create("    local a, var1 <const> = 10;\n    function foo() a = 20; z = function () var1 = 12; end  end\n  "U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"testing to-be-closed variables\"", value: ImmutableArray.Create("testing to-be-closed variables"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "stack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "stack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "w");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"in\"", value: ImmutableArray.Create("in"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "w");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"out\"", value: ImmutableArray.Create("out"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"in\"", value: ImmutableArray.Create("in"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"out\"", value: ImmutableArray.Create("out"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "closescope");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "stack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "101", value: 101L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "closescope");
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.5", value: 1.5D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.5", value: 1.5D);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "closescope");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "15", value: 15L);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "15", value: 15L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "closescope");
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "closescope");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "w");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "bar");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "bar");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "tail");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "tail");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "o1");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "o1");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"testing errors in __close\"", value: ImmutableArray.Create("testing errors in __close"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@y\"", value: ImmutableArray.Create("@y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@x\"", value: ImmutableArray.Create("@x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x1");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@y\"", value: ImmutableArray.Create("@y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "gc");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@z\"", value: ImmutableArray.Create("@z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@y\"", value: ImmutableArray.Create("@y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@z\"", value: ImmutableArray.Create("@z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@x\"", value: ImmutableArray.Create("@x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pcall\"", value: ImmutableArray.Create("pcall"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@x1\"", value: ImmutableArray.Create("@x1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x1");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pcall\"", value: ImmutableArray.Create("pcall"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@y\"", value: ImmutableArray.Create("@y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@x1\"", value: ImmutableArray.Create("@x1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "gc");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pcall\"", value: ImmutableArray.Create("pcall"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@z\"", value: ImmutableArray.Create("@z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@y\"", value: ImmutableArray.Create("@y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "first");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"pcall\"", value: ImmutableArray.Create("pcall"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "first");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "first");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@z\"", value: ImmutableArray.Create("@z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@x1\"", value: ImmutableArray.Create("@x1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x1");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@X\"", value: ImmutableArray.Create("@X"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@Y\"", value: ImmutableArray.Create("@Y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x123");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@X\"", value: ImmutableArray.Create("@X"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "os");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "exit");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "xpcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "traceback");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "match");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"^[^ ]* @Y\"", value: ImmutableArray.Create("^[^ ]* @Y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x123");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@x123\"", value: ImmutableArray.Create("@x123"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "xpcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "traceback");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "match");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"^[^ ]* @x123\"", value: ImmutableArray.Create("^[^ ]* @x123"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"in metamethod 'close'\"", value: ImmutableArray.Create("in metamethod 'close'"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "os");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "exit");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"variable 'x' got a non%-closable value\"", value: ImmutableArray.Create("variable 'x' got a non%-closable value"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "xyz");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "xyz");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"metamethod 'close'\"", value: ImmutableArray.Create("metamethod 'close'"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"number value\"", value: ImmutableArray.Create("number value"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a3");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "123", value: 123L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "xx");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xx\"", value: ImmutableArray.Create("xx"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xx\"", value: ImmutableArray.Create("xx"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x0");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "202", value: 202L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x0\"", value: ImmutableArray.Create("x0"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "xx");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "101", value: 101L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xx\"", value: ImmutableArray.Create("xx"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "202", value: 202L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "101", value: 101L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "202", value: 202L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xx\"", value: ImmutableArray.Create("xx"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x0\"", value: ImmutableArray.Create("x0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "overflow");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "overflow");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "errorh");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"stack overflow\"", value: ImmutableArray.Create("stack overflow"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "tracegc");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "stop");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "xpcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "overflow");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "errorh");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "tracegc");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "start");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "rawget");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"T\"", value: ImmutableArray.Create("T"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "loop");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "400", value: 400L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "loop");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "loop");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "script");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[toclose 2; settop 1; return 1]]", value: ImmutableArray.Create("toclose 2; settop 1; return 1"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "script");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "script");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "stack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "closemsg");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "closemsg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "enter");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "stack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "closemsg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "enter");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "closemsg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "xxx");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "xx");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "enter");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "closemsg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"stop\"", value: ImmutableArray.Create("stop"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "upper");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "11000", value: 11000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"restart\"", value: ImmutableArray.Create("restart"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2000", value: 2000L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"stop\"", value: ImmutableArray.Create("stop"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"restart\"", value: ImmutableArray.Create("restart"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "hook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.StringLiteralToken, text: "\" \"", value: ImmutableArray.Create(" "U8.ToArray()));
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.StringLiteralToken, text: "\"?\"", value: ImmutableArray.Create("?"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "hook");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"r\"", value: ImmutableArray.Create("r"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n       toclose 2      # x\n       pushnum 10\n       pushint 20\n       toclose 3      # y\n       return 2\n    ]]", value: ImmutableArray.Create("       toclose 2      # x\n       pushnum 10\n       pushint 20\n       toclose 3      # y\n       return 2\n    "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return sethook\"", value: ImmutableArray.Create("return sethook"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return ?\"", value: ImmutableArray.Create("return ?"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return ?\"", value: ImmutableArray.Create("return ?"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return testC\"", value: ImmutableArray.Create("return testC"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "hook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.StringLiteralToken, text: "\" \"", value: ImmutableArray.Create(" "U8.ToArray()));
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "hook");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"r\"", value: ImmutableArray.Create("r"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return sethook\"", value: ImmutableArray.Create("return sethook"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return close\"", value: ImmutableArray.Create("return close"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return close\"", value: ImmutableArray.Create("return close"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return foo\"", value: ImmutableArray.Create("return foo"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"to-be-closed variables in coroutines\"", value: ImmutableArray.Create("to-be-closed variables in coroutines"U8.ToArray()));
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"nowX\"", value: ImmutableArray.Create("nowX"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x1\"", value: ImmutableArray.Create("x1"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x2\"", value: ImmutableArray.Create("x2"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z1\"", value: ImmutableArray.Create("z1"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z2\"", value: ImmutableArray.Create("z2"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"nowY\"", value: ImmutableArray.Create("nowY"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y1\"", value: ImmutableArray.Create("y1"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y2\"", value: ImmutableArray.Create("y2"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"nowX\"", value: ImmutableArray.Create("nowX"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z1\"", value: ImmutableArray.Create("z1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z2\"", value: ImmutableArray.Create("z2"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"nowY\"", value: ImmutableArray.Create("nowY"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y1\"", value: ImmutableArray.Create("y1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y2\"", value: ImmutableArray.Create("y2"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x1\"", value: ImmutableArray.Create("x1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x2\"", value: ImmutableArray.Create("x2"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "extrares");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "body");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "body");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "extrares");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "extrares");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "extrares");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "extrares");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "21", value: 21L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "xv");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "yv");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "xx");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@XXX\"", value: ImmutableArray.Create("@XXX"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@YYY\"", value: ImmutableArray.Create("@YYY"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "xv");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@XXX\"", value: ImmutableArray.Create("@XXX"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@YYY\"", value: ImmutableArray.Create("@YYY"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "xx");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"XXX\"", value: ImmutableArray.Create("XXX"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"YYY\"", value: ImmutableArray.Create("YYY"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "xv");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"XXX\"", value: ImmutableArray.Create("XXX"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"%w+%.%w+:%d+: YYY\"", value: ImmutableArray.Create("%w+%.%w+:%d+: YYY"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "os");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "exit");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "rawget");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"T\"", value: ImmutableArray.Create("T"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"to-be-closed variables x coroutines in C\"", value: ImmutableArray.Create("to-be-closed variables x coroutines in C"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "token");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n      toclose 1\n      toclose 2\n      return .\n    ]]", value: ImmutableArray.Create("      toclose 1\n      toclose 2\n      return .\n    "U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "token");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "token");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "ct");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "ct");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "ct");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "ct");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "token");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n      toclose 1\n      return .\n    ]]", value: ImmutableArray.Create("      toclose 1\n      return .\n    "U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "temp");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "temp");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "temp");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"closing obj\"", value: ImmutableArray.Create("closing obj"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"closing obj\"", value: ImmutableArray.Create("closing obj"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"closing x\"", value: ImmutableArray.Create("closing x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"closing x\"", value: ImmutableArray.Create("closing x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n      toclose 1\n      closeslot 1\n    ]]", value: ImmutableArray.Create("      toclose 1\n      closeslot 1\n    "U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"attempt to yield across\"", value: ImmutableArray.Create("attempt to yield across"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n      toclose 1\n    ]]", value: ImmutableArray.Create("      toclose 1\n    "U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"attempt to yield from outside\"", value: ImmutableArray.Create("attempt to yield from outside"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "open");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "open");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "45", value: 45L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "open");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "35", value: 35L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "open");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "open");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.GotoKeyword);
        V(SyntaxKind.IdentifierToken, text: "endloop");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ColonColonToken);
        V(SyntaxKind.IdentifierToken, text: "endloop");
        V(SyntaxKind.ColonColonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "375", value: 375L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfFileToken);
    }

    private void TestOfficialTestFileWithTrivia_locals(string source, SourceCodeKind kind)
    {
        var V = LexSource(source, options: TestOptions.RegularDefault.WithKind(kind), withTrivia: true);

        V(SyntaxKind.SingleLineCommentTrivia, text: "-- $Id: testes/locals.lua $", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- See Copyright Notice in file all.lua", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'testing local variables and environments'", value: ImmutableArray.Create("testing local variables and environments"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "require");
        V(SyntaxKind.StringLiteralToken, text: "\"debug\"", value: ImmutableArray.Create("debug"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tracegc");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "require");
        V(SyntaxKind.StringLiteralToken, text: "\"tracegc\"", value: ImmutableArray.Create("tracegc"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- bug in 5.1:", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "select");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'local a = {}'", value: ImmutableArray.Create("local a = {}"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_2");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_3");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_4");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_5");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_6");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_7");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_8");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_9");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_10");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'q'", value: ImmutableArray.Create("q"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'function'", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "getenv");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getupvalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'_ENV'", value: ImmutableArray.Create("_ENV"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- test for global table of loaded chunks", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getenv");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.StringLiteralToken, text: "\"a=3\"", value: ImmutableArray.Create("a=3"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"a = 3\"", value: ImmutableArray.Create("a = 3"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getenv");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- old test for limits for special instructions", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- p == 2^i", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.RepeatKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "format");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[local a=%s;\n                                        a=a+%s;\n                                        assert(a ==2^%s)]]", value: ImmutableArray.Create("local a=%s;\n                                        a=a+%s;\n                                        assert(a ==2^%s)"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "''", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "format");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[local a=%s;\n                                        a=a-%s;\n                                        assert(a==-2^%s)]]", value: ImmutableArray.Create("local a=%s;\n                                        a=a-%s;\n                                        assert(a==-2^%s)"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "''", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "format");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[local a,b=0,%s;\n                                        a=b-%s;\n                                        assert(a==-2^%s)]]", value: ImmutableArray.Create("local a,b=0,%s;\n                                        a=b-%s;\n                                        assert(a==-2^%s)"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "''", value: ImmutableArray.Create(""U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.UntilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "rawget");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"T\"", value: ImmutableArray.Create("T"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing clearing of dead elements from tables", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"stop\"", value: ImmutableArray.Create("stop"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- stop GC", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "alo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a1234567890123456789012345678901234567890");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- restore GC and collect dead fields in 'a'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'number'", value: ImmutableArray.Create("number"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'alo'", value: ImmutableArray.Create("alo"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing allocation errors during table insertions", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "additems");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "huge");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "additems");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing lexical environments", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "dummy");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "dummy");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- {", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- \"declare\" A", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getenv");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'hi'", value: ImmutableArray.Create("hi"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'hi'", value: ImmutableArray.Create("hi"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'*'", value: ImmutableArray.Create("*"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'*'", value: ImmutableArray.Create("*"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_ENV");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- constants", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'b' is not constant", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "60", value: 60L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "code");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "code");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "gab");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "format");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"attempt to assign to const variable '%s'\"", value: ImmutableArray.Create("attempt to assign to const variable '%s'"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "gab");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"local x, y <const>, z = 10, 20, 30; x = 11; y = 12\"", value: ImmutableArray.Create("local x, y <const>, z = 10, 20, 30; x = 11; y = 12"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"local x <const>, y, z <const> = 10, 20, 30; x = 11\"", value: ImmutableArray.Create("local x <const>, y, z <const> = 10, 20, 30; x = 11"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"local x <const>, y, z <const> = 10, 20, 30; y = 10; z = 11\"", value: ImmutableArray.Create("local x <const>, y, z <const> = 10, 20, 30; y = 10; z = 11"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"local foo <const> = 10; function foo() end\"", value: ImmutableArray.Create("local foo <const> = 10; function foo() end"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"local foo <const> = {}; function foo() end\"", value: ImmutableArray.Create("local foo <const> = {}; function foo() end"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    local a, z <const>, b = 10;\n    function foo() a = 20; z = 32; end\n  ]]", value: ImmutableArray.Create("    local a, z <const>, b = 10;\n    function foo() a = 20; z = 32; end\n  "U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkro");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"var1\"", value: ImmutableArray.Create("var1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n    local a, var1 <const> = 10;\n    function foo() a = 20; z = function () var1 = 12; end  end\n  ]]", value: ImmutableArray.Create("    local a, var1 <const> = 10;\n    function foo() a = 20; z = function () var1 = 12; end  end\n  "U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"testing to-be-closed variables\"", value: ImmutableArray.Create("testing to-be-closed variables"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "stack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "stack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- not to be closed", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "w");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- not to be closed", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"in\"", value: ImmutableArray.Create("in"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "w");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"out\"", value: ImmutableArray.Create("out"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"in\"", value: ImmutableArray.Create("in"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"out\"", value: ImmutableArray.Create("out"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closescope");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "stack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "101", value: 101L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'x' is not read-only", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- closing functions do not corrupt returning values", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closescope");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.5", value: 1.5D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.5", value: 1.5D);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- without errors, enclosing function should be still active when", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- __close is called", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closescope");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "15", value: 15L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "15", value: 15L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closescope");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closescope");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing to-be-closed x compile-time constants", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- (there were some bugs here in Lua 5.4-rc3, due to a confusion", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- between compile levels and stack levels of variables)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'x' must be closed here", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- similar problem, but with implicit close in for loops", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- return an empty iterator, nil, nil, and 'x' to be closed", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "w");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "const");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- ending the loop must close 'x'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'x' must be closed here", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- calls cannot be tail in the scope of to-be-closed variables", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'X' not closed yet", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "bar");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- not a tail call!", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "bar");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "X");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "Y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- bug in 5.4.3: previous condition (calls cannot be tail in the", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- scope of to-be-closed variables) must be valid for tbc variables", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- created by 'for' loops.", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tail");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tail");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- bug in 5.4.4: 'break' may generate wrong 'close' instruction when", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- leaving a loop block.", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "o1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "o1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- create an upvalue", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "closed");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"testing errors in __close\"", value: ImmutableArray.Create("testing errors in __close"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- original error is in __close", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"@y\"", value: ImmutableArray.Create("@y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@x\"", value: ImmutableArray.Create("@x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"@y\"", value: ImmutableArray.Create("@y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "gc");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"@z\"", value: ImmutableArray.Create("@z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error in 'z'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@y\"", value: ImmutableArray.Create("@y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@z\"", value: ImmutableArray.Create("@z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"@x\"", value: ImmutableArray.Create("@x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- original error not in __close", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- after error, 'foo' was discarded, so caller now", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- must be 'pcall'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"pcall\"", value: ImmutableArray.Create("pcall"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"@x1\"", value: ImmutableArray.Create("@x1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"pcall\"", value: ImmutableArray.Create("pcall"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"@y\"", value: ImmutableArray.Create("@y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@x1\"", value: ImmutableArray.Create("@x1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "gc");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"pcall\"", value: ImmutableArray.Create("pcall"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"@z\"", value: ImmutableArray.Create("@z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@y\"", value: ImmutableArray.Create("@y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "first");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"pcall\"", value: ImmutableArray.Create("pcall"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'z' close is called once", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "first");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "first");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@z\"", value: ImmutableArray.Create("@z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- original error", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"@x1\"", value: ImmutableArray.Create("@x1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error leaving a block", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"@X\"", value: ImmutableArray.Create("@X"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@Y\"", value: ImmutableArray.Create("@Y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x123");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@X\"", value: ImmutableArray.Create("@X"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "os");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "exit");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- should not run", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xpcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "traceback");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "match");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"^[^ ]* @Y\"", value: ImmutableArray.Create("^[^ ]* @Y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error in toclose in vararg function", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x123");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@x123\"", value: ImmutableArray.Create("@x123"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xpcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "traceback");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "match");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"^[^ ]* @x123\"", value: ImmutableArray.Create("^[^ ]* @x123"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"in metamethod 'close'\"", value: ImmutableArray.Create("in metamethod 'close'"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- errors due to non-closable values", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "os");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "exit");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- should not run", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"variable 'x' got a non%-closable value\"", value: ImmutableArray.Create("variable 'x' got a non%-closable value"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xyz");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "xyz");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- remove metamethod", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"metamethod 'close'\"", value: ImmutableArray.Create("metamethod 'close'"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"number value\"", value: ImmutableArray.Create("number value"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a3");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "123", value: 123L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- invalidate metamethod", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "stat");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- tbc inside close methods", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"xx\"", value: ImmutableArray.Create("xx"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"xx\"", value: ImmutableArray.Create("xx"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- again, with errors", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x0");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "202", value: 202L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x0\"", value: ImmutableArray.Create("x0"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "101", value: 101L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"xx\"", value: ImmutableArray.Create("xx"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "202", value: 202L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "101", value: 101L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "202", value: 202L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"foo\"", value: ImmutableArray.Create("foo"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"xx\"", value: ImmutableArray.Create("xx"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "track");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x0\"", value: ImmutableArray.Create("x0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t1");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- test for tbc variable high in the stack", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- function to force a stack overflow", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "overflow");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "overflow");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error handler will create tbc variable handling a stack overflow,", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- high in the stack", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "errorh");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"stack overflow\"", value: ImmutableArray.Create("stack overflow"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- run test in a coroutine so as not to swell the main stack", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- tbc variable down the stack", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "tracegc");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "stop");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xpcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "overflow");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "errorh");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "tracegc");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "start");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "flag");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "rawget");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"T\"", value: ImmutableArray.Create("T"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- bug in 5.4.3", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'lua_settop' may use a pointer to stack invalidated by 'luaF_close'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- reduce stack size", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- force a stack reallocation", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "loop");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "400", value: 400L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "loop");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- close metamethod will reallocate the stack", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "loop");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "script");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[toclose 2; settop 1; return 1]]", value: ImmutableArray.Create("toclose 2; settop 1; return 1"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "script");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "o");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "script");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- memory error inside closing function", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- force a memory error", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- common error inside the function's body", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "stack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- ensure a minimal number of CI structures", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- despite memory error, 'y' will be executed and", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- memory limit will be lifted", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closemsg");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "closemsg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- set a memory limit and return a closing object to remove the limit", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "enter");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "stack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- reserve some stack space", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "closemsg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "enter");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- set a memory limit", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- raise a memory error", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closemsg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- repeat test with extra closing upvalues", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xxx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- raise another error", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "enter");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- set a memory limit", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- raise a memory error", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "closemsg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"not enough memory\"", value: ImmutableArray.Create("not enough memory"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing 'toclose' in C string buffer", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- large string", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"stop\"", value: ImmutableArray.Create("stop"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "upper");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- allocate buffer + new string (10K each)", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- ensure buffer was deallocated", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "11000", value: 11000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"restart\"", value: ImmutableArray.Create("restart"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- now some tests for freeing buffer in case of errors", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- some size larger than the static buffer", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2000", value: 2000L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- some extra memory (for callinfo, etc.)", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- concat this table needs two buffer resizes (one for each 's')", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"stop\"", value: ImmutableArray.Create("stop"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error in the first buffer allocation", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- first buffer was not even allocated", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error in the second buffer allocation", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- first buffer was released by 'toclose'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error in creation of final string", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- second buffer was released by 'toclose'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- userdata, buffer, buffer, final string", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "totalmem");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- remove memory limit", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"restart\"", value: ImmutableArray.Create("restart"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- '__close' vs. return hooks in C functions", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "hook");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\" \"", value: ImmutableArray.Create(" "U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"?\"", value: ImmutableArray.Create("?"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- create tbc variables to be used by C function", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "hook");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"r\"", value: ImmutableArray.Create("r"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "testC");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n       toclose 2      # x\n       pushnum 10\n       pushint 20\n       toclose 3      # y\n       return 2\n    ]]", value: ImmutableArray.Create("       toclose 2      # x\n       pushnum 10\n       pushint 20\n       toclose 3      # y\n       return 2\n    "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- hooks ran before return hook from 'testC'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return sethook\"", value: ImmutableArray.Create("return sethook"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"return ?\"", value: ImmutableArray.Create("return ?"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"return ?\"", value: ImmutableArray.Create("return ?"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"return testC\"", value: ImmutableArray.Create("return testC"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- results are correct", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- '__close' vs. return hooks in Lua functions", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "hook");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "event");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\" \"", value: ImmutableArray.Create(" "U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getinfo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "hook");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"r\"", value: ImmutableArray.Create("r"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sethook");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return sethook\"", value: ImmutableArray.Create("return sethook"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"return close\"", value: ImmutableArray.Create("return close"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"return close\"", value: ImmutableArray.Create("return close"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"return foo\"", value: ImmutableArray.Create("return foo"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"to-be-closed variables in coroutines\"", value: ImmutableArray.Create("to-be-closed variables in coroutines"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yielding inside closing metamethods", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"nowX\"", value: ImmutableArray.Create("nowX"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- will be closed after 'y'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x1\"", value: ImmutableArray.Create("x1"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x2\"", value: ImmutableArray.Create("x2"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'z' will be closed first", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"z1\"", value: ImmutableArray.Create("z1"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"z2\"", value: ImmutableArray.Create("z2"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"nowY\"", value: ImmutableArray.Create("nowY"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- will be closed after 'z'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y1\"", value: ImmutableArray.Create("y1"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y2\"", value: ImmutableArray.Create("y2"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checktable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "trace");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"nowX\"", value: ImmutableArray.Create("nowX"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"z1\"", value: ImmutableArray.Create("z1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"z2\"", value: ImmutableArray.Create("z2"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"nowY\"", value: ImmutableArray.Create("nowY"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y1\"", value: ImmutableArray.Create("y1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y2\"", value: ImmutableArray.Create("y2"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x1\"", value: ImmutableArray.Create("x1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x2\"", value: ImmutableArray.Create("x2"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yielding inside closing metamethods while returning", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- (bug in 5.4.3)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extrares");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- result from extra yield (if any)", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "body");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- expected returns", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "body");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "extrares");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- runs until first (extra) yield", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- runs until yield inside '__close'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- runs until end of function", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- value that was closed", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "self");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extrares");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "extrares");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "extrares");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "extra");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 100 nils", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yielding inside closing metamethods after an error", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- still gets the original error (if any)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- creates or changes the error", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- no error", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error in __close", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'foo' will raise an error", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- first foo: no error", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yields inside 'x'; Ok", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yields inside 'y'; Ok", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yields inside 'z'; Ok", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- returns from 'pcall(foo, nil)'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- second foo: error in __close", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yields inside 'x'; Ok", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yields inside 'y'; Ok", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yields inside 'z'; Ok", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- reports the error in 'y'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "21", value: 21L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- third foo: error in function body", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yields inside 'x'; Ok", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"y\"", value: ImmutableArray.Create("y"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yields inside 'y'; Ok", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"z\"", value: ImmutableArray.Create("z"U8.ToArray()));
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yields inside 'z'; Ok", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- gets final error", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- an error in a wrapped coroutine closes variables", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xv");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "yv");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yield doesn't close variable", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- yield doesn't close variable", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error does", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "23", value: 23L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- error in a wrapped coroutine raising errors when closing a variable", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"@XXX\"", value: ImmutableArray.Create("@XXX"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@YYY\"", value: ImmutableArray.Create("@YYY"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xv");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"@XXX\"", value: ImmutableArray.Create("@XXX"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"@YYY\"", value: ImmutableArray.Create("@YYY"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- should get error raised", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xx");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"XXX\"", value: ImmutableArray.Create("XXX"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"YYY\"", value: ImmutableArray.Create("YYY"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "xv");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"XXX\"", value: ImmutableArray.Create("XXX"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- should get first error raised", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"%w+%.%w+:%d+: YYY\"", value: ImmutableArray.Create("%w+%.%w+:%d+: YYY"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- a suspended coroutine should not close its variables when collected", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- should not run", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "os");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "exit");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- start coroutine", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- eventually it will be collected", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "rawget");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"T\"", value: ImmutableArray.Create("T"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"to-be-closed variables x coroutines in C\"", value: ImmutableArray.Create("to-be-closed variables x coroutines in C"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "token");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n      toclose 1\n      toclose 2\n      return .\n    ]]", value: ImmutableArray.Create("      toclose 1\n      toclose 2\n      return .\n    "U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "token");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "token");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ct");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- will return 10, 20, 30", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- initial token value, after closing 2nd obj", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "ct");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- run until yield when closing 1st obj", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "ct");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "ct");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- run until end", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "token");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "200", value: 200L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n      toclose 1\n      return .\n    ]]", value: ImmutableArray.Create("      toclose 1\n      return .\n    "U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "temp");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "close");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "temp");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- to be ignored", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "temp");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"closing obj\"", value: ImmutableArray.Create("closing obj"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- to be ignored", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- will return only 30", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"closing obj\"", value: ImmutableArray.Create("closing obj"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"closing x\"", value: ImmutableArray.Create("closing x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"closing x\"", value: ImmutableArray.Create("closing x"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- still cannot yield inside 'closeslot'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n      toclose 1\n      closeslot 1\n    ]]", value: ImmutableArray.Create("      toclose 1\n      closeslot 1\n    "U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"attempt to yield across\"", value: ImmutableArray.Create("attempt to yield across"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- nor outside a coroutine", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "makeCfunc");
        V(SyntaxKind.MultiLineRawStringLiteralToken, text: "[[\n      toclose 1\n    ]]", value: ImmutableArray.Create("      toclose 1\n    "U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "st");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"attempt to yield from outside\"", value: ImmutableArray.Create("attempt to yield from outside"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- to-be-closed variables in generic for loops", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "open");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- iteraction function", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- state", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- control variable", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "func2close");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- closing function", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "open");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "45", value: 45L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "open");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "35", value: 35L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "open");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "open");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GotoKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "endloop");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ColonColonToken);
        V(SyntaxKind.IdentifierToken, text: "endloop");
        V(SyntaxKind.ColonColonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "375", value: 375L);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "numopen");
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhitespaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- }", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfFileToken);
    }
}
