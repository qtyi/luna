// Licensed to the Qtyi under one or more agreements.
// The Qtyi licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System.Collections.Immutable;
using Microsoft.CodeAnalysis;
using Qtyi.CodeAnalysis.Lua.Test.Utilities;

namespace Qtyi.CodeAnalysis.Lua.UnitTests.Lexing;

partial class FileTests
{
    private void TestOfficialTestFile_nextvar(string source, SourceCodeKind kind)
    {
        var V = LexSource(source, options: TestOptions.RegularDefault.WithKind(kind));

        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'testing tables, next, and for'", value: ImmutableArray.Create("testing tables, next, and for"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "na");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "nh");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "na");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "nh");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "na");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "nh");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.StringLiteralToken, text: "\"+\"", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.StringLiteralToken, text: "\"+\"", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "128", value: 128L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "95", value: 95L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "128", value: 128L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "95", value: 95L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "96", value: 96L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "24", value: 24L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'function'", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxinteger");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: skipping tests for table sizes <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping tests for table sizes <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "mp");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "ceil");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "log");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mp");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "mp");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "mp");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "15", value: 15L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "17", value: 17L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "31", value: 31L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "32", value: 32L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "33", value: 33L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "34", value: 34L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "254", value: 254L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "255", value: 255L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "256", value: 256L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "500", value: 500L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "arr");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return {\"", value: ImmutableArray.Create("return {"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "arr");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"1,\"", value: ImmutableArray.Create("1,"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "sh");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "sh");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "arr");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "format");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'k%x=%d,'", value: ImmutableArray.Create("k%x=%d,"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "arr");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "sh");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"}\"", value: ImmutableArray.Create("}"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "prog");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arr");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "prog");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"stop\"", value: ImmutableArray.Create("stop"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "sh");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"restart\"", value: ImmutableArray.Create("restart"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sh");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "130", value: 130L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "14", value: 14L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "18", value: 18L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "35", value: 35L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "select");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'#'", value: ImmutableArray.Create("#"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "64", value: 64L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "64", value: 64L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "64", value: 64L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "32", value: 32L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "48", value: 48L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "51", value: 51L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "48", value: 48L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "select");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "48", value: 48L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "select");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "51", value: 51L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "nofind");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "nofind");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "find1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"print\"", value: ImmutableArray.Create("print"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"print\"", value: ImmutableArray.Create("print"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"print\"", value: ImmutableArray.Create("print"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"print\"", value: ImmutableArray.Create("print"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"assert\"", value: ImmutableArray.Create("assert"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "nofind");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return\"", value: ImmutableArray.Create("return"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "find1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return\"", value: ImmutableArray.Create("return"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ret\"", value: ImmutableArray.Create("ret"U8.ToArray()));
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.StringLiteralToken, text: "\"urn\"", value: ImmutableArray.Create("urn"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "nofind");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return\"", value: ImmutableArray.Create("return"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xxx\"", value: ImmutableArray.Create("xxx"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "xxx");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xxx\"", value: ImmutableArray.Create("xxx"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"invalid key\"", value: ImmutableArray.Create("invalid key"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bad argument\"", value: ImmutableArray.Create("bad argument"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bad argument\"", value: ImmutableArray.Create("bad argument"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "fmod");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "'x'", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "9000", value: 9000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "package");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "loaded");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"function\"", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"^[%u_]\"", value: ImmutableArray.Create("^[%u_]"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'number'", value: ImmutableArray.Create("number"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"1000\"", value: ImmutableArray.Create("1000"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"1000\"", value: ImmutableArray.Create("1000"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "24.5", value: 24.5D);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "24.5", value: 24.5D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pi");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pi");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.1", value: 1.1D);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "'x'", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'x'", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "io");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "stdin");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x \"", value: ImmutableArray.Create("x "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "100.3", value: 100.3D);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"testing next x GC of deleted keys\"", value: ImmutableArray.Create("testing next x GC of deleted keys"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k1");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "expected");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table\"", value: ImmutableArray.Create("table"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"function\"", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sub");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "expected");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"b\"", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"b\"", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"c\"", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"c\"", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"collect\"", value: ImmutableArray.Create("collect"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"2\"", value: ImmutableArray.Create("2"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "'c'", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'d'", value: ImmutableArray.Create("d"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "'b'", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'c'", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'d'", value: ImmutableArray.Create("d"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'b'", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sort");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\",\"", value: ImmutableArray.Create(","U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"1,2,3,4,5,6,7,8,9,10\"", value: ImmutableArray.Create("1,2,3,4,5,6,7,8,9,10"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__len");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__index");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "rawset");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__index");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "__len");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\";\"", value: ImmutableArray.Create(";"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"2;3;4;5;6\"", value: ImmutableArray.Create("2;3;4;5;6"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__len");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxinteger");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: skipping tests for table library on non-tables <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping tests for table library on non-tables <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "require");
        V(SyntaxKind.StringLiteralToken, text: "'debug'", value: ImmutableArray.Create("debug"U8.ToArray()));
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "newuserdata");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__index");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__len");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__len");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "tab2");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "u2");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "newuserdata");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u2");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "tab2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "move");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "u2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "tab2");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "tab2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "tab2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.StringLiteralToken, text: "\"not here\"", value: ImmutableArray.Create("not here"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.StringLiteralToken, text: "'not here'", value: ImmutableArray.Create("not here"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.StringLiteralToken, text: "'not here'", value: ImmutableArray.Create("not here"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"testing floats in numeric for\"", value: ImmutableArray.Create("testing floats in numeric for"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1e4", value: 10000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.99999", value: 0.99999D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "9999", value: 9999L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1e4", value: 10000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.99999", value: 0.99999D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.999999999", value: 0.999999999D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.1", value: 0.1D);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.5", value: 1.5D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.5", value: 1.5D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1e6", value: 1000000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1e6", value: 1000000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.99999", value: 0.99999D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "99999", value: 99999L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1e5", value: 100000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.99999", value: 0.99999D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10.0", value: 10D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"10\"", value: ImmutableArray.Create("10"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"1\"", value: ImmutableArray.Create("1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"-2\"", value: ImmutableArray.Create("-2"U8.ToArray()));
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkfloat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"float\"", value: ImmutableArray.Create("float"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkfloat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkfloat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"integer\"", value: ImmutableArray.Create("integer"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxinteger");
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10.9", value: 10.9D);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.001", value: 0.001D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"10.8\"", value: ImmutableArray.Create("10.8"U8.ToArray()));
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"3.4\"", value: ImmutableArray.Create("3.4"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\" -3.4  \"", value: ImmutableArray.Create(" -3.4  "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"96.3\"", value: ImmutableArray.Create("96.3"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "huge");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "huge");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10e100", value: 1E+101D);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxinteger");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10e100", value: 1E+101D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "from");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "to");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "from");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "to");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxinteger");
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "huge");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "huge");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"'for' step is zero\"", value: ImmutableArray.Create("'for' step is zero"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"'for' step is zero\"", value: ImmutableArray.Create("'for' step is zero"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"'for' step is zero\"", value: ImmutableArray.Create("'for' step is zero"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "select");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"#\"", value: ImmutableArray.Create("#"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "'function'", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__pairs");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__index");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__pairs");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "inc");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "inc");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "inc");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"OK\"", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.EndOfFileToken);
    }

    private void TestOfficialTestFileWithTrivia_nextvar(string source, SourceCodeKind kind)
    {
        var V = LexSource(source, options: TestOptions.RegularDefault.WithKind(kind), withTrivia: true);

        V(SyntaxKind.SingleLineCommentTrivia, text: "-- $Id: testes/nextvar.lua $", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- See Copyright Notice in file all.lua", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'testing tables, next, and for'", value: ImmutableArray.Create("testing tables, next, and for"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "err");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "msg");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "na");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "nh");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "na");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "nh");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "na");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "nh");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "h");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- make sure table has lots of space in hash part", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.StringLiteralToken, text: "\"+\"", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.StringLiteralToken, text: "\"+\"", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- fill hash part with numeric indices testing size operator", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- rehash moving elements from array to hash", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "128", value: 128L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "95", value: 95L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "128", value: 128L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- force a re-hash", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "95", value: 95L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "96", value: 96L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing ipairs", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "12", value: 12L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "24", value: 24L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- test for 'false' x ipair", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- iterator function is always the same", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'function'", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- overflow (must wrap-around)", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxinteger");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: skipping tests for table sizes <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping tests for table sizes <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "--[", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing table sizes", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- minimum power of 2 >= n", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mp");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "ceil");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "log");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mp");
        V(SyntaxKind.SlashToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mp");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mp");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing C library sizes", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "s");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing constructor sizes", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "15", value: 15L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "17", value: 17L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "31", value: 31L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "32", value: 32L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "33", value: 33L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "34", value: 34L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "254", value: 254L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "255", value: 255L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "256", value: 256L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "500", value: 500L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'sa' is size of the array part", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "arr");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return {\"", value: ImmutableArray.Create("return {"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "arr");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"1,\"", value: ImmutableArray.Create("1,"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- build array part", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sh");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'sh' is size of the hash part", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sh");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- build hash part", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "arr");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "format");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'k%x=%d,'", value: ImmutableArray.Create("k%x=%d,"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "arr");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sh");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"}\"", value: ImmutableArray.Create("}"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "prog");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arr");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "load");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "prog");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"stop\"", value: ImmutableArray.Create("stop"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- call once to ensure stack space", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- make sure table is not resized after being created", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sh");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- header + array or hash part", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- header + array part + hash part", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "alloccount");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"restart\"", value: ImmutableArray.Create("restart"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "sa");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sh");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- tests with unknown number of elements", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- build auxiliary table", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "sizes");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing tables dynamically built", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "130", value: 130L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "16", value: 16L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- force a rehash (?)", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 5 elements in the table", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- force a rehash (?)", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- only 6 elements in the table", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "14", value: 14L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "18", value: 18L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- force a rehash (?)", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- only 2 elements ([15] and [16])", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- reverse filling", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- fill in reverse", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- size tests for vararg", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "35", value: 35L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "select");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'#'", value: ImmutableArray.Create("#"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "check");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "arg");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mp2");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "lim");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- Table length with limit smaller than maximum value at array", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "64", value: 64L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- make its array size 64", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "64", value: 64L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- erase all elements", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "64", value: 64L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- array part has 64 elements", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "32", value: 32L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "48", value: 48L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- binary search will find these ones", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "51", value: 51L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- binary search will miss this one", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "48", value: 48L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- this will set the limit", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "select");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "48", value: 48L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- this is the limit now", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- this will set a new limit", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "select");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "querytab");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- this is the limit now", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- but the size is larger (and still inside the array part)", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "51", value: 51L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "--]", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- test size operation on tables with nils", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "nofind");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- next uses always the same iteraction function", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "nofind");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "find1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "name");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- not found", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"print\"", value: ImmutableArray.Create("print"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "find1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"print\"", value: ImmutableArray.Create("print"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"print\"", value: ImmutableArray.Create("print"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"print\"", value: ImmutableArray.Create("print"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"assert\"", value: ImmutableArray.Create("assert"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "nofind");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return\"", value: ImmutableArray.Create("return"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "find1");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return\"", value: ImmutableArray.Create("return"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"ret\"", value: ImmutableArray.Create("ret"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"urn\"", value: ImmutableArray.Create("urn"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "nofind");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"return\"", value: ImmutableArray.Create("return"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xxx\"", value: ImmutableArray.Create("xxx"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "xxx");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"xxx\"", value: ImmutableArray.Create("xxx"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- invalid key to 'next'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"invalid key\"", value: ImmutableArray.Create("invalid key"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- both 'pairs' and 'ipairs' need an argument", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bad argument\"", value: ImmutableArray.Create("bad argument"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"bad argument\"", value: ImmutableArray.Create("bad argument"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "fmod");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "'x'", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.DotDotToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "9000", value: 9000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- clear global table", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "package");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "loaded");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"function\"", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "find");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"^[%u_]\"", value: ImmutableArray.Create("^[%u_]"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "_G");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "--", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checknext");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "j");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'maxn' is now deprecated, but it is easily defined in Lua", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'number'", value: ImmutableArray.Create("number"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "max");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"1000\"", value: ImmutableArray.Create("1000"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"1000\"", value: ImmutableArray.Create("1000"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "24.5", value: 24.5D);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "24.5", value: 24.5D);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pi");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "pi");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxn");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- int overflow", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CaretToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing 'next' with all kinds of keys", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- integer", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.1", value: 1.1D);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- float", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "'x'", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- short string", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'x'", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- long string", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- C function", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- Lua function", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "running");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- thread", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- boolean", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "io");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "stdin");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- userdata", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- table", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TrueKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'b' now is empty", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- erasing values", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"x \"", value: ImmutableArray.Create("x "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "100.3", value: 100.3D);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"testing next x GC of deleted keys\"", value: ImmutableArray.Create("testing next x GC of deleted keys"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- bug in 5.4.1", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- all previous keys were deleted", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k1");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- current key is the first in the table", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "expected");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"table\"", value: ImmutableArray.Create("table"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"function\"", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sub");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "expected");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- add several unanchored, collectable keys", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"a\"", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- long string", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"b\"", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"b\"", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "string");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "rep");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"c\"", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"c\"", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- short string", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhileKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"collect\"", value: ImmutableArray.Create("collect"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- collect dead keys", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- traversed the whole table", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.StringLiteralToken, text: "\"2\"", value: ImmutableArray.Create("2"U8.ToArray()));
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "7", value: 7L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"ban\"", value: ImmutableArray.Create("ban"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "'c'", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'d'", value: ImmutableArray.Create("d"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'b'", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'c'", value: ImmutableArray.Create("c"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'d'", value: ImmutableArray.Create("d"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'a'", value: ImmutableArray.Create("a"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'b'", value: ImmutableArray.Create("b"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pcall");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing table library with metamethods", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.TildeEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "sort");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\",\"", value: ImmutableArray.Create(","U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"1,2,3,4,5,6,7,8,9,10\"", value: ImmutableArray.Create("1,2,3,4,5,6,7,8,9,10"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "8", value: 8L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- all virtual", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__len");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__index");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "proxy");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- only __newindex", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "rawset");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "test");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "count");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- after first 10, all other sets are not new", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- no __newindex", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__index");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "__len");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "concat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\";\"", value: ImmutableArray.Create(";"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"2;3;4;5;6\"", value: ImmutableArray.Create("2;3;4;5;6"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing overflow in table.insert (must wrap-around)", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__len");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxinteger");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: skipping tests for table library on non-tables <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping tests for table library on non-tables <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "--[", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "require");
        V(SyntaxKind.StringLiteralToken, text: "'debug'", value: ImmutableArray.Create("debug"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "newuserdata");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__index");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"table expected\"", value: ImmutableArray.Create("table expected"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__len");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "remove");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "40", value: 40L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "insert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "50", value: 50L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "mt");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "__len");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tab2");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u2");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "newuserdata");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u2");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__newindex");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tab2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "move");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "u");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "u2");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "tab2");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tab2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tab2");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "tab");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- ]", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'+'", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "undef");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1000", value: 1000L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "next");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.StringLiteralToken, text: "\"not here\"", value: ImmutableArray.Create("not here"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.StringLiteralToken, text: "'not here'", value: ImmutableArray.Create("not here"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "error");
        V(SyntaxKind.StringLiteralToken, text: "'not here'", value: ImmutableArray.Create("not here"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"testing floats in numeric for\"", value: ImmutableArray.Create("testing floats in numeric for"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- integer count", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10000", value: 10000L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1e4", value: 10000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.99999", value: 0.99999D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "9999", value: 9999L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1e4", value: 10000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.99999", value: 0.99999D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- float count", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.999999999", value: 0.999999999D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.1", value: 0.1D);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.5", value: 1.5D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.5", value: 1.5D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1e6", value: 1000000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1e6", value: 1000000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.99999", value: 0.99999D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "99999", value: 99999L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1e5", value: 100000D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.99999", value: 0.99999D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- changing the control variable", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10.0", value: 10D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"x\"", value: ImmutableArray.Create("x"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- conversion", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"10\"", value: ImmutableArray.Create("10"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"1\"", value: ImmutableArray.Create("1"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.StringLiteralToken, text: "\"-2\"", value: ImmutableArray.Create("-2"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- checking types", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkfloat");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"float\"", value: ImmutableArray.Create("float"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkfloat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkfloat");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"integer\"", value: ImmutableArray.Create("integer"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxinteger");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "m");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "11", value: 11L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10.9", value: 10.9D);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.001", value: 0.001D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"10.8\"", value: ImmutableArray.Create("10.8"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "9", value: 9L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"3.4\"", value: ImmutableArray.Create("3.4"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\" -3.4  \"", value: ImmutableArray.Create(" -3.4  "U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "100", value: 100L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"96.3\"", value: ImmutableArray.Create("96.3"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "huge");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "huge");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.BreakKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkint");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10e100", value: 1E+101D);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxinteger");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10e100", value: 1E+101D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing other strange cases for numeric 'for'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "from");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "to");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "from");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "to");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "maxinteger");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "mininteger");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "huge");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "math");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "huge");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "6", value: 6L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "4", value: 4L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SlashSlashToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "step");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "maxi");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkfor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "mini");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"'for' step is zero\"", value: ImmutableArray.Create("'for' step is zero"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"'for' step is zero\"", value: ImmutableArray.Create("'for' step is zero"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "checkerror");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"'for' step is zero\"", value: ImmutableArray.Create("'for' step is zero"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1.0", value: 1D);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0.0", value: 0D);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing generic 'for'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.SemicolonToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "select");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"#\"", value: ImmutableArray.Create("#"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DotDotDotToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- no extra arguments", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "table");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "unpack");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "b");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "c");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "d");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing __pairs and __ipairs metamethod", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "type");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'function'", value: ImmutableArray.Create("function"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "y");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "z");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo1");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "e");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__pairs");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "5", value: 5L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing ipairs with metamethods", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "__index");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.LessThanEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "ipairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "k");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "v");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AsteriskToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "a");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "n");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- testing yield inside __pairs", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__pairs");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "inc");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.GreaterThanToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "inc");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.MinusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "inc");
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ElseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "wrap");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ForKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "i");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.InKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "pairs");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.PlusToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "p");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- start coroutine", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- continue after yield", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "30", value: 30L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "2", value: 2L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "20", value: 20L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.HashToken);
        V(SyntaxKind.IdentifierToken, text: "res");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "3", value: 3L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "\"OK\"", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfFileToken);
    }
}
