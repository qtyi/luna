// Licensed to the Qtyi under one or more agreements.
// The Qtyi licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System.Collections.Immutable;
using Microsoft.CodeAnalysis;
using Qtyi.CodeAnalysis.Lua.Test.Utilities;

namespace Qtyi.CodeAnalysis.Lua.UnitTests.Lexing;

partial class FileTests
{
    private void TestOfficialTestFile_gengc(string source, SourceCodeKind kind)
    {
        var V = LexSource(source, options: TestOptions.RegularDefault.WithKind(kind));

        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'testing generational garbage collection'", value: ImmutableArray.Create("testing generational garbage collection"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "require");
        V(SyntaxKind.StringLiteralToken, text: "\"debug\"", value: ImmutableArray.Create("debug"U8.ToArray()));
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"isrunning\"", value: ImmutableArray.Create("isrunning"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "oldmode");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"generational\"", value: ImmutableArray.Create("generational"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "234", value: 234L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"touched1\"", value: ImmutableArray.Create("touched1"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"new\"", value: ImmutableArray.Create("new"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"touched2\"", value: ImmutableArray.Create("touched2"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"survival\"", value: ImmutableArray.Create("survival"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old1\"", value: ImmutableArray.Create("old1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "234", value: 234L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old0\"", value: ImmutableArray.Create("old0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old1\"", value: ImmutableArray.Create("old1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__gc");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.IdentifierToken, text: "gcf");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old1\"", value: ImmutableArray.Create("old1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"survival\"", value: ImmutableArray.Create("survival"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__gc");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "gcf");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"+\"", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"new\"", value: ImmutableArray.Create("new"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"hello\"", value: ImmutableArray.Create("hello"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "123", value: 123L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "123", value: 123L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"hello\"", value: ImmutableArray.Create("hello"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "123", value: 123L);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"hello\"", value: ImmutableArray.Create("hello"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__mode");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"kv\"", value: ImmutableArray.Create("kv"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"touched1\"", value: ImmutableArray.Create("touched1"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gccolor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"gray\"", value: ImmutableArray.Create("gray"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"touched2\"", value: ImmutableArray.Create("touched2"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gccolor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"black\"", value: ImmutableArray.Create("black"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: \\z\n                             skipping some generational tests <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping some generational tests <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "newuserdata");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "setuservalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "234", value: 234L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"touched1\"", value: ImmutableArray.Create("touched1"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getuservalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"new\"", value: ImmutableArray.Create("new"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"touched2\"", value: ImmutableArray.Create("touched2"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getuservalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"survival\"", value: ImmutableArray.Create("survival"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getuservalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.StringLiteralToken, text: "\"old1\"", value: ImmutableArray.Create("old1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getuservalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.NumericLiteralToken, text: "234", value: 234L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.StringLiteralToken, text: "'isrunning'", value: ImmutableArray.Create("isrunning"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.StringLiteralToken, text: "'isrunning'", value: ImmutableArray.Create("isrunning"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "oldmode");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfFileToken);
    }

    private void TestOfficialTestFileWithTrivia_gengc(string source, SourceCodeKind kind)
    {
        var V = LexSource(source, options: TestOptions.RegularDefault.WithKind(kind), withTrivia: true);

        V(SyntaxKind.SingleLineCommentTrivia, text: "-- $Id: testes/gengc.lua $", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- See Copyright Notice in file all.lua", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'testing generational garbage collection'", value: ImmutableArray.Create("testing generational garbage collection"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "require");
        V(SyntaxKind.StringLiteralToken, text: "\"debug\"", value: ImmutableArray.Create("debug"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"isrunning\"", value: ImmutableArray.Create("isrunning"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "oldmode");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"generational\"", value: ImmutableArray.Create("generational"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- ensure that table barrier evolves correctly", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- full collection makes 'U' old", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- U refers to a new table, so it becomes 'touched1'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "234", value: 234L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"touched1\"", value: ImmutableArray.Create("touched1"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"new\"", value: ImmutableArray.Create("new"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- both U and the table survive one more collection", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"touched2\"", value: ImmutableArray.Create("touched2"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"survival\"", value: ImmutableArray.Create("survival"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- both U and the table survive yet another collection", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- now everything is old", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old1\"", value: ImmutableArray.Create("old1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- data was not corrupted", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "234", value: 234L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- ensure that 'firstold1' is corrected when object is removed from", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- the 'allgc' list", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- make 'old' old", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- new table becomes OLD0 (barrier)", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old0\"", value: ImmutableArray.Create("old0"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- new table becomes OLD1 and firstold1", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old1\"", value: ImmutableArray.Create("old1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__gc");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "foo");
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- get it out of allgc list", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- should not seg. fault", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- bug in 5.4.0", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- When an object aged OLD1 is finalized, it is moved from the list", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'finobj' to the *beginning* of the list 'allgc', but that part of the", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- list was not being visited by 'markold'.", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FalseKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- old anchor for object", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- obj finalizer", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "gcf");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- anchor object", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old1\"", value: ImmutableArray.Create("old1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- remove it from the stack", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- do a young collection", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "A");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- metatable was collected", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- make A old", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- create a new object", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- make it a survival", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"survival\"", value: ImmutableArray.Create("survival"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__gc");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "gcf");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"+\"", value: ImmutableArray.Create("+"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- create its metatable", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "getmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"new\"", value: ImmutableArray.Create("new"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "obj");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- clear object", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- will call obj's finalizer", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- another bug in 5.4.0", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- make 'old' old", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "create");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.FunctionKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "yield");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "_");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- create closure over 'x' in coroutine", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- make upvalue a survival", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.StringLiteralToken, text: "\"hello\"", value: ImmutableArray.Create("hello"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- 'old' go to grayagain as 'touched1'", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "coroutine");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "resume");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "123", value: 123L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- its value will be new", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "co");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- hit the barrier", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "123", value: 123L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"hello\"", value: ImmutableArray.Create("hello"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- run the collector once more", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- make sure old[1] was not collected", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "f");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "123", value: 123L);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "old");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"hello\"", value: ImmutableArray.Create("hello"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- bug introduced in commit 9cf3299fa", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "setmetatable");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "__mode");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"kv\"", value: ImmutableArray.Create("kv"U8.ToArray()));
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- all-weak table", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- full collection", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"touched1\"", value: ImmutableArray.Create("touched1"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gccolor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"gray\"", value: ImmutableArray.Create("gray"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- minor collection", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"touched2\"", value: ImmutableArray.Create("touched2"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gccolor");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"black\"", value: ImmutableArray.Create("black"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- minor collection", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NotKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- t should be black, but it was gray", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "10", value: 10L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- no barrier here, so t was still old", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- minor collection", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- t, being old, is ignored by the collection, so it is not cleared", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "t");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- fails with the bug", location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IfKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NilKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.ThenKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "Message");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OrKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'\\n >>> testC not active: \\z\n                             skipping some generational tests <<<\\n'", value: ImmutableArray.Create("\n >>> testC not active: skipping some generational tests <<<\n"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.ReturnKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- ensure that userdata barrier evolves correctly", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.DoKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.LocalKeyword);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "newuserdata");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- full collection makes 'U' old", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- U refers to a new table, so it becomes 'touched1'", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "setuservalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.OpenBraceToken);
        V(SyntaxKind.NumericLiteralToken, text: "234", value: 234L);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseBraceToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"touched1\"", value: ImmutableArray.Create("touched1"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getuservalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"new\"", value: ImmutableArray.Create("new"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- both U and the table survive one more collection", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"touched2\"", value: ImmutableArray.Create("touched2"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getuservalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"survival\"", value: ImmutableArray.Create("survival"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- both U and the table survive yet another collection", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- now everything is old", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "\"step\"", value: ImmutableArray.Create("step"U8.ToArray()));
        V(SyntaxKind.CommaToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "0", value: 0L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old\"", value: ImmutableArray.Create("old"U8.ToArray()));
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.AndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "T");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "gcage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getuservalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.StringLiteralToken, text: "\"old1\"", value: ImmutableArray.Create("old1"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- data was not corrupted", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "debug");
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "getuservalue");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "U");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.DotToken);
        V(SyntaxKind.IdentifierToken, text: "x");
        V(SyntaxKind.OpenBracketToken);
        V(SyntaxKind.NumericLiteralToken, text: "1", value: 1L);
        V(SyntaxKind.CloseBracketToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EqualsEqualsToken);
        V(SyntaxKind.WhiteSpaceTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.NumericLiteralToken, text: "234", value: 234L);
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndKeyword);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- just to make sure", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.StringLiteralToken, text: "'isrunning'", value: ImmutableArray.Create("isrunning"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.SingleLineCommentTrivia, text: "-- just to make sure", location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "assert");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.StringLiteralToken, text: "'isrunning'", value: ImmutableArray.Create("isrunning"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "collectgarbage");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.IdentifierToken, text: "oldmode");
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.IdentifierToken, text: "print");
        V(SyntaxKind.OpenParenToken);
        V(SyntaxKind.StringLiteralToken, text: "'OK'", value: ImmutableArray.Create("OK"U8.ToArray()));
        V(SyntaxKind.CloseParenToken);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Trailing);
        V(SyntaxKind.EndOfLineTrivia, location: TriviaLocation.Leading);
        V(SyntaxKind.EndOfFileToken);
    }
}
